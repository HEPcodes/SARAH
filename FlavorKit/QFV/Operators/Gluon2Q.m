(* Code automatically generated by 'PreSARAH' *) 
(* Expressions for amplitudes are obtained by FeynArts/FormCalc *) 
(* This file is supposed to be loaded and used by SARAH *) 
(* Created at 10:30 on 5.10.2016 *) 
 
 
Print["   ... ",Gluon2Q]; 
NamesParticles =  {BottomQuark, bar[BottomQuark], Gluon}; 
 NamesOperators =  {OG2qSL, OG2qSR}; 
 NameProcess = Gluon2Q; 
 
Generate[Gluon2Q][file_]:=Block[{i,j,k}, 
 

 (* Creating all possible processes; extract information about involved masses/couplings *) 


(* ------------------------------- *)
(* {BottomQuark, bar[BottomQuark], Gluon} *)
(* ------------------------------- *)
 
GetInformtion2Fermion1BosonProcess[BottomQuark,bar[BottomQuark],Gluon,Gluon2Q,file]; 
NeededMassesAll=Intersection[NeededMasses];
NeededCouplingsAll=Intersection[NeededCouplings];
WriteCodeObservablePreSARAH[Gluon2Q][NeededMassesAll,NeededCouplingsAll,TreeContributions,WaveContributions,PenguinContributions,file]; 
NeededMassAllSaved[Gluon2Q] = masses 
]; 

WriteCodeObservablePreSARAH[Gluon2Q][masses_,couplings_,tree_,wave_,penguin_,file_] :=Block[{i,j,k,fermions,scalars}, 
 
NeededMassesAllSaved[Gluon2Q] = masses; 
NeededCouplingsAllSaved[Gluon2Q] = couplings; 
NeededCombinations[Gluon2Q] = {{3, 2}}; 
Print["     writing SPheno code for ",Gluon2Q]; 
MakeSubroutineTitle["CalculateGluon2Q",Flatten[{masses,couplings}],{"gt1","gt2","gt3","OnlySM"}, 
{"OG2qSL", "OG2qSR"},file]; 
WriteString[file,"! ---------------------------------------------------------------- \n"]; 
WriteString[file,"! Code based on automatically generated SARAH extensions by 'PreSARAH' \n"]; 
WriteString[file,"! Expressions for amplitudes are obtained by FeynArts/FormCalc \n"]; 
WriteString[file,"! Based on user input for process Gluon2Q \n"]; 
WriteString[file,"! 'PreSARAH' output has been generated  at 10:30 on 5.10.2016 \n"]; 
WriteString[file,"! ---------------------------------------------------------------- \n \n"]; 
 
 
WriteString[file,"Implicit None \n"]; 
MakeVariableList[Flatten[{couplings,masses}],",Intent(in)",file];
WriteString[file,"Integer,Intent(in) :: gt1, gt2,gt3 \n"];
WriteString[file,"Integer :: gt4 \n"];
WriteString[file,"Logical, Intent(in) :: OnlySM \n"];
WriteString[file,"Integer :: iprop, i1, i2, i3, i4 \n"];
WriteString[file,"Real(dp) :: MassEx1,MassEx2,MassEx3,MassEx12,MassEx22,MassEx32 \n"];
WriteString[file,"Complex(dp), Intent(out) :: OG2qSL \n"]; 
WriteString[file,"Complex(dp), Intent(out) :: OG2qSR \n"]; 
WriteString[file,"Real(dp) ::  MP, MP2, IMP2, IMP, MFin, MFin2, IMFin, IMFin2, Finite  \n"];
WriteString[file,"Real(dp) ::  MS1, MS12, MS2, MS22, MF1, MF12, MF2, MF22, MV1, MV12, MV2, MV22  \n"];
WriteString[file,"Complex(dp) ::  chargefactor  \n"];
WriteString[file,"Complex(dp) ::  coup1L, coup1R, coup2L, coup2R, coup3L, coup3R, coup3, coup4L, coup4R \n\n"];

WriteString[file,"Complex(dp) ::  int1,int2,int3,int4,int5,int6,int7,int8 \n\n"];

WriteString[file,"Iname=Iname+1 \n"];
WriteString[file,"NameOfUnit(Iname)='CalculateGluon2Q' \n
"];
 
AddCalcSquaredMasses[masses,file]; 
(* Initaliziation *)
WriteString[file,"Finite=1._dp \n"];
WriteString[file,"MassEx1="<>SPhenoMass[BottomQuark,gt1]<>"  \n"];
WriteString[file,"MassEx12="<>SPhenoMassSq[BottomQuark,gt1]<>" \n"];
WriteString[file,"MassEx2="<>SPhenoMass[bar[BottomQuark],gt2]<>"  \n"];
WriteString[file,"MassEx22="<>SPhenoMassSq[bar[BottomQuark],gt2]<>" \n"];
WriteString[file,"MassEx3="<>SPhenoMass[Gluon,gt3]<>"  \n"];
WriteString[file,"MassEx32="<>SPhenoMassSq[Gluon,gt3]<>" \n"];
WriteString[file,"! ------------------------------ \n "];
WriteString[file,"! Amplitudes for external states \n "];
WriteString[file,"! {BottomQuark, bar[BottomQuark], Gluon} \n "];
WriteString[file,"! ------------------------------ \n \n"];
WriteString[sphenoTeX,"\\section{External states: $"<>TeXOutput[{BottomQuark[{gt1}], bar[BottomQuark][{gt2}], Gluon[{gt3}]}]<>"$} \n"];
WriteString[file,"OG2qSL=0._dp \n"]; 
WriteString[file,"OG2qSR=0._dp \n"]; 
WriteDiagramsObservable[Gluon2Q,tree, wave, penguin, file];
WriteString[file,"OG2qSL=oo16pi2*OG2qSL \n"]; 
WriteString[file,"OG2qSR=oo16pi2*OG2qSR \n"]; 
WriteString[file,"Iname=Iname-1\n\n"]; 
WriteString[file,"End Subroutine CalculateGluon2Q \n\n"]; 
]; 
AddTreeResultPreSARAH[Gluon2Q][top_,type_,file_]:=Block[{}, 

 (* This routine returns the generic expression for the amplitude of a given triangle diagram *) 
 
 Switch[top,  (* Check topology *) 
  1, 
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+ 0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+ 0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
]; 
]; 


AddPenguinResultPreSARAH[Gluon2Q][top_,type_,file_]:=Block[{}, 

 (* This routine returns the generic expression for the amplitude of a given triangle diagram *) 
 
 Switch[top,  (* Check topology *) 
  1, 
  Switch[type,  (* Check the generic type of the diagram *) 
	SFF, 
	 	 WriteString[file,"  int1=C0C1C2(mF22, mF12, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_1= & "<> StringReplace["C0C1C2(mF22, mF12, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int2=C12g(mF22, mF12, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_2= & "<> StringReplace["C12g(mF22, mF12, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int3=C1g(mF22, mF12, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_3= & "<> StringReplace["C1g(mF22, mF12, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int4=C2C12C22(mF22, mF12, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_4= & "<> StringReplace["C2C12C22(mF22, mF12, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+2.*chargefactor*(coup1R*coup2L*coup3L*int2*MassEx1 - 1.*coup1L*(coup2R*coup3R*int4*MassEx2 + coup2L*coup3L*int3*mF1 - 1.*coup2L*coup3R*int1*mF2))\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["2 chargefactor (coup1R coup2L coup3L I_2 MassEx1 - coup1L (coup2R coup3R I_4 MassEx2 + coup2L coup3L I_3 mF1 - coup2L coup3R I_1 mF2))",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,2*(coup1L*coup2L*coup3R*mF2*C0C1C2[mF22, mF12, mS12] + coup1R*coup2L*coup3L*MassEx1*C12g[mF22, mF12, mS12] - coup1L*(coup2L*coup3L*mF1*C1g[mF22, mF12, mS12] + coup2R*coup3R*MassEx2*C2C12C22[mF22, mF12, mS12]))}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+2.*chargefactor*(coup1L*coup2R*coup3R*int2*MassEx1 - 1.*coup1R*(coup2L*coup3L*int4*MassEx2 + coup2R*coup3R*int3*mF1 - 1.*coup2R*coup3L*int1*mF2))\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["2 chargefactor (coup1L coup2R coup3R I_2 MassEx1 - coup1R (coup2L coup3L I_4 MassEx2 + coup2R coup3R I_3 mF1 - coup2R coup3L I_1 mF2))",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,2*(coup1R*coup2R*coup3L*mF2*C0C1C2[mF22, mF12, mS12] + coup1L*coup2R*coup3R*MassEx1*C12g[mF22, mF12, mS12] - coup1R*(coup2R*coup3R*mF1*C1g[mF22, mF12, mS12] + coup2L*coup3L*MassEx2*C2C12C22[mF22, mF12, mS12]))} " ];
,
	FSS, 
	 	 WriteString[file,"  int1=C0C1C2(mF12, mS22, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_1= & "<> StringReplace["C0C1C2(mF12, mS22, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int2=C1C12C11(mF12, mS22, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_2= & "<> StringReplace["C1C12C11(mF12, mS22, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int3=C2C12C22(mF12, mS22, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_3= & "<> StringReplace["C2C12C22(mF12, mS22, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+2.*chargefactor*coup3*(coup1R*coup2L*int3*MassEx1 + coup1L*coup2R*int2*MassEx2 - 1.*coup1L*coup2L*int1*mF1)\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["2 chargefactor coup3 (coup1R coup2L I_3 MassEx1 + coup1L coup2R I_2 MassEx2 - coup1L coup2L I_1 mF1)",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,2*coup3*(-(coup1L*coup2L*mF1*C0C1C2[mF12, mS22, mS12]) + coup1L*coup2R*MassEx2*C1C12C11[mF12, mS22, mS12] + coup1R*coup2L*MassEx1*C2C12C22[mF12, mS22, mS12])}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+2.*chargefactor*coup3*(coup1L*coup2R*int3*MassEx1 + coup1R*coup2L*int2*MassEx2 - 1.*coup1R*coup2R*int1*mF1)\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["2 chargefactor coup3 (coup1L coup2R I_3 MassEx1 + coup1R coup2L I_2 MassEx2 - coup1R coup2R I_1 mF1)",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,2*coup3*(-(coup1R*coup2R*mF1*C0C1C2[mF12, mS22, mS12]) + coup1R*coup2L*MassEx2*C1C12C11[mF12, mS22, mS12] + coup1L*coup2R*MassEx1*C2C12C22[mF12, mS22, mS12])} " ];
,
	VFF, 
	 	 WriteString[file,"  int1=C12C22(mF22, mF12, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_1= & "<> StringReplace["C12C22(mF22, mF12, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int2=C2C12(mF22, mF12, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_2= & "<> StringReplace["C2C12(mF22, mF12, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int3=C2g(mF22, mF12, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_3= & "<> StringReplace["C2g(mF22, mF12, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+-4.*chargefactor*(-1.*coup1R*coup2R*coup3R*int2*MassEx1 + coup1L*(coup2L*coup3L*int1*MassEx2 + coup2R*int3*(coup3R*mF1 + coup3L*mF2)))\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["-4 chargefactor (-(coup1R coup2R coup3R I_2 MassEx1) + coup1L (coup2L coup3L I_1 MassEx2 + coup2R I_3 (coup3R mF1 + coup3L mF2)))",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,-4*(coup1L*coup2L*coup3L*MassEx2*C12C22[mF22, mF12, mV12] + coup2R*(-(coup1R*coup3R*MassEx1*C2C12[mF22, mF12, mV12]) + coup1L*(coup3R*mF1 + coup3L*mF2)*C2g[mF22, mF12, mV12]))}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+chargefactor*(4.*coup1L*coup2L*coup3L*int2*MassEx1 - 4.*coup1R*(coup2R*coup3R*int1*MassEx2 + coup2L*int3*(coup3L*mF1 + coup3R*mF2)))\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["chargefactor (4 coup1L coup2L coup3L I_2 MassEx1 - 4 coup1R (coup2R coup3R I_1 MassEx2 + coup2L I_3 (coup3L mF1 + coup3R mF2)))",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,-4*(coup1R*coup2R*coup3R*MassEx2*C12C22[mF22, mF12, mV12] + coup2L*(-(coup1L*coup3L*MassEx1*C2C12[mF22, mF12, mV12]) + coup1R*(coup3L*mF1 + coup3R*mF2)*C2g[mF22, mF12, mV12]))} " ];
,
	FSV, 
	 	 WriteString[file,"  int1=C1g(mF12, mV22, mS12)\n" ];
	 	 WriteString[sphenoTeX,"I_1= & "<> StringReplace["C1g(mF12, mV22, mS12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+-2.*chargefactor*coup1L*coup2R*coup3*int1\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["-2 chargefactor coup1L coup2R coup3 I_1",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,-2*coup1L*coup2R*coup3*C1g[mF12, mV22, mS12]}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+-2.*chargefactor*coup1R*coup2L*coup3*int1\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["-2 chargefactor coup1R coup2L coup3 I_1",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,-2*coup1R*coup2L*coup3*C1g[mF12, mV22, mS12]} " ];
,
	FVS, 
	 	 WriteString[file,"  int1=C2g(mF12, mS22, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_1= & "<> StringReplace["C2g(mF12, mS22, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+-2.*chargefactor*coup1L*coup2L*coup3*int1\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["-2 chargefactor coup1L coup2L coup3 I_1",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,-2*coup1L*coup2L*coup3*C2g[mF12, mS22, mV12]}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+-2.*chargefactor*coup1R*coup2R*coup3*int1\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["-2 chargefactor coup1R coup2R coup3 I_1",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,-2*coup1R*coup2R*coup3*C2g[mF12, mS22, mV12]} " ];
,
	FVV, 
	 	 WriteString[file,"  int1=C12C11C2(mF12, mV22, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_1= & "<> StringReplace["C12C11C2(mF12, mV22, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int2=C12C22C1(mF12, mV22, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_2= & "<> StringReplace["C12C22C1(mF12, mV22, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteString[file,"  int3=C1C2(mF12, mV22, mV12)\n" ];
	 	 WriteString[sphenoTeX,"I_3= & "<> StringReplace["C1C2(mF12, mV22, mV12)",SA`SPhenoTeXSub]<>" \\\\ \n"];
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+2.*chargefactor*coup3*(coup1R*coup2R*int2*MassEx1 + coup1L*coup2L*int1*MassEx2 + 3.*coup1L*coup2R*int3*mF1)\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["2 chargefactor coup3 (coup1R coup2R I_2 MassEx1 + coup1L coup2L I_1 MassEx2 + 3 coup1L coup2R I_3 mF1)",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,2*coup3*(coup1L*coup2L*MassEx2*C12C11C2[mF12, mV22, mV12] + coup1R*coup2R*MassEx1*C12C22C1[mF12, mV22, mV12] + 3*coup1L*coup2R*mF1*C1C2[mF12, mV22, mV12])}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+2.*chargefactor*coup3*(coup1L*coup2L*int2*MassEx1 + coup1R*coup2R*int1*MassEx2 + 3.*coup1R*coup2L*int3*mF1)\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["2 chargefactor coup3 (coup1L coup2L I_2 MassEx1 + coup1R coup2R I_1 MassEx2 + 3 coup1R coup2L I_3 mF1)",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,2*coup3*(coup1R*coup2R*MassEx2*C12C11C2[mF12, mV22, mV12] + coup1L*coup2L*MassEx1*C12C22C1[mF12, mV22, mV12] + 3*coup1R*coup2L*mF1*C1C2[mF12, mV22, mV12])} " ];
]; 
];]; 


AddWaveResultPreSARAH[Gluon2Q][top_,type_,file_]:=Block[{}, 

 (* This routine returns the generic expression for the amplitude of a given triangle diagram *) 
 
 Switch[top,  (* Check topology *) 
  1, 
  Switch[type,  (* Check the generic type of the diagram *) 
	FS | SF , 
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,0}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,0} " ];
,
	FV | VF , 
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,0}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,0} " ];
]; 
,
  2, 
  Switch[type,  (* Check the generic type of the diagram *) 
	FS | SF , 
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,0}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,0} " ];
,
	FV | VF , 
	 	 WriteStringFLB[file,"  OG2qSL=OG2qSL+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSL= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSL,0}, " ];
	 	 WriteStringFLB[file,"  OG2qSR=OG2qSR+0.\n" ];
	 	 WriteString[sphenoTeX,"  OG2qSR= & "<> StringReplace["0",SA`SPhenoTeXSub]<>" \\\\ \n" ];
	 	 WriteString[FKout,"  {OG2qSR,0} " ];
]; 
];]; 


