(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



SPhenoHiggsBoundsIncluded =True;


WriteHiggsBounds:=Block[{i},
WriteString[sphenoInOut,"\n \n Subroutine WriteHiggsBounds \n"];
WriteString[sphenoInOut, "Implicit None \n"];
MakeVariableList[namesHB,"",sphenoInOut];
If[NewNumericalDependences=!={},
MakeVariableList[Transpose[NewNumericalDependences ][[1]],"",sphenoInOut];
];

For[i=1,i<=Length[NewNumericalDependences],
WriteString[sphenoInOut, SPhenoForm[NewNumericalDependences[[i,1]]] <> " = " <> SPhenoForm[NewNumericalDependences[[i,2]]] <> "\n"];
i++;];

(* MakeCall["CouplingsForHiggs" , Join[parametersHB,namesHB],{},{},sphenoInOut]; *)


WriteString[sphenoInOut, "Open(87,file=\"MH_GammaTot.dat\",status=\"unknown\") \n"];
WriteString[sphenoInOut, "Open(88,file=\"MHplus_GammaTot.dat\",status=\"unknown\") \n"];
WriteString[sphenoInOut, "Open(89,file=\"effC.dat\",status=\"unknown\") \n"];
WriteString[sphenoInOut, "Open(90,file=\"BR_H_NP.dat\",status=\"unknown\") \n"];
WriteString[sphenoInOut, "Open(91,file=\"BR_Hplus.dat\",status=\"unknown\") \n"];
WriteString[sphenoInOut, "Open(92,file=\"BR_t.dat\",status=\"unknown\") \n"];
WriteString[sphenoInOut, "Open(93,file=\"LEP_HpHm_CS_ratios.dat\",status=\"unknown\") \n"];

If[FreeQ[ParticleDefinitions[SPheno`Eigenstates],"Higgs"]===False,
genhh=getGenSPheno[HiggsBoson];
genhhS=getGenSPhenoStart[HiggsBoson];,
genhh=0;
genhhS=1;
];

If[FreeQ[ParticleDefinitions[SPheno`Eigenstates],"Pseudo-Scalar Higgs"]===False,
genAhS=getGenSPhenoStart[PseudoScalar];
genAh=getGenSPheno[PseudoScalar];,
genAh=0;
genAhS=1;
];

If[FreeQ[ParticleDefinitions[SPheno`Eigenstates],"Charged Higgs"]===False,
genHpS=getGenSPhenoStart[ChargedHiggs];
genHp=getGenSPheno[ChargedHiggs];,
genHp=0;
genHpS=1;
];

SA`NumberNeutralHiggs = genhh+genAh-(genhhS-1) - (genAhS -1);
SA`NumberChargedHiggs = genHp - (genHpS -1);


WriteString[sphenoInOut,"Write(87,\"(I1)\",advance=\"No\") 1 \n"];
WriteString[sphenoInOut,"Write(88,\"(I1)\",advance=\"No\") 1 \n"];


(* Masses *)

For[i=genhhS,i<=genhh, WriteString[sphenoInOut,"Write(87,\"(2e16.8)\",advance=\"No\") "<>SPhenoMass[HiggsBoson,i]<>"\n"];i++;];
For[i=genAhS,i<=genAh,WriteString[sphenoInOut,"Write(87,\"(2e16.8)\",advance=\"No\") "<>SPhenoMass[PseudoScalar,i]<>"\n"];i++;];
For[i=genHpS,i<=genHp,WriteString[sphenoInOut,"Write(88,\"(2e16.8)\",advance=\"No\") "<>SPhenoMass[ChargedHiggs,i]<>"\n"];i++;];


(* Widths *)

For[i=genhhS,i<=genhh,WriteString[sphenoInOut,"Write(87,\"(2e16.8)\",advance=\"No\") "<> SPhenoWidth[HiggsBoson,i]<>"\n"];i++;];
For[i=genAhS,i<=genAh,WriteString[sphenoInOut,"Write(87,\"(2e16.8)\",advance=\"No\") "<> SPhenoWidth[PseudoScalar,i]<>"\n"];i++;];
For[i=genHpS,i<=genHp,WriteString[sphenoInOut,"Write(88,\"(2e16.8)\",advance=\"No\") "<> SPhenoWidth[ChargedHiggs,i]<>"\n"];i++;];



WriteString[sphenoInOut,"Write(90,\"(I1)\",advance=\"No\") 1 \n"];
For[i=genhhS,i<=genhh,WriteString[sphenoInOut,"Write(90,\"(e16.8)\",advance=\"No\") BRinvH("<>ToString[i]<>") \n"];i++;];
For[j=genAhS,j<=genAh,WriteString[sphenoInOut,"Write(90,\"(e16.8)\",advance=\"No\") BRinvA("<>ToString[j]<>") \n"];j++;];

For[i=genhhS,i<=genhh,
For[j=genhhS,j<=genhh,
If[i!=j,
WriteString[sphenoInOut,"Write(90,\"(e16.8)\",advance=\"No\") BRHHH("<>ToString[i]<>","<>ToString[j]<>") \n"];
];
j++;];
For[j=genAhS,j<=genAh,
WriteString[sphenoInOut, "Write(90,\"(e16.8)\",advance=\"No\") BRHAA("<>ToString[i]<>","<>ToString[j]<>") \n"];
j++;];
i++;];


For[i=genAhS,i<=genAh,
For[j=genhhS,j<=genhh,
WriteString[sphenoInOut,"Write(90,\"(e16.8)\",advance=\"No\") BRAHH("<>ToString[i]<>","<>ToString[j]<>") \n"];
j++;];
For[j=genAhS,j<=genAh,
If[i!=j,
WriteString[sphenoInOut, "Write(90,\"(e16.8)\",advance=\"No\") BRAAA("<>ToString[i]<>","<>ToString[j]<>") \n"];
];
j++;];
i++;];



WriteString[sphenoInOut, "\n \n \n"];

WriteString[sphenoInOut,"Write(92,\"(I1)\",advance=\"No\") 1\n"];
WriteString[sphenoInOut,"Write(92,\"(e16.8)\",advance=\"No\") BR_tWb \n"];
If[getGen[ChargedHiggs]>1,
For[i=getGenSPhenoStart[ChargedHiggs],i<=getGen[ChargedHiggs],
WriteString[sphenoInOut,"Write(92,\"(e16.8)\",advance=\"No\") BR_tHb("<>ToString[i]<>") \n"];
i++;];,
WriteString[sphenoInOut,"Write(92,\"(e16.8)\",advance=\"No\") BR_tHb \n"];
];

WriteString[sphenoInOut,"Write(91,\"(I1)\",advance=\"No\") 1 \n"];


If[getGen[ChargedHiggs]>1,
For[i=getGenSPhenoStart[ChargedHiggs],i<=getGen[ChargedHiggs],
WriteString[sphenoInOut,"Write(91,\"(3e16.8)\",advance=\"No\") BR_Hcs("<>ToString[i]<>") \n"]; WriteString[sphenoInOut,"Write(91,\"(3e16.8)\",advance=\"No\")BR_Hcb("<>ToString[i]<>") \n"];
WriteString[sphenoInOut,"Write(91,\"(3e16.8)\",advance=\"No\")BR_Htaunu("<>ToString[i]<>") \n"];
i++;];,
WriteString[sphenoInOut,"Write(91,\"(3e16.8)\",advance=\"No\") BR_Hcs, BR_Hcb, BR_Htaunu \n \n"];
];



WriteString[sphenoInOut,"Write(89,\"(I1)\",advance=\"No\") 1 \n"];

(* Strange Quark *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBS[BottomQuark,i,2]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBS[BottomQuark,(i-genhh+genAhS-1+genhhS-1),2]<>"\n"];
];
i++;];


For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBP[BottomQuark,i,2]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBP[BottomQuark,(i-genhh+genAhS-1+genhhS-1),2]<>"\n"];
];
i++;];

(* Charm Quark *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBS[TopQuark,i,2]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBS[TopQuark,(i-genhh+genAhS-1+genhhS-1),2]<>"\n"];
];
i++;];

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBP[TopQuark,i,2]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBP[TopQuark,(i-genhh+genAhS-1+genhhS-1),2]<>"\n"];
];
i++;];

(* Bottom Quark *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBS[BottomQuark,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBS[BottomQuark,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBP[BottomQuark,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBP[BottomQuark,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];

(* Top Quark *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBS[TopQuark,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBS[TopQuark,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBP[TopQuark,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBP[TopQuark,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];


(* Muon *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBS[Electron,i,2]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBS[Electron,(i-genhh+genAhS-1+genhhS-1),2]<>"\n"];
];
i++;];


For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBP[Electron,i,2]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBP[Electron,(i-genhh+genAhS-1+genhhS-1),2]<>"\n"];
];
i++;];

(* Tau *)


For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBS[Electron,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBS[Electron,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHBP[Electron,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHBP[Electron,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];

(* W *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHB[VectorW,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHB[VectorW,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];

(* Z *)


For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioHB[VectorZ,i,3]<>"\n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") "<>SPhenoRatioPseudoHB[VectorZ,(i-genhh+genAhS-1+genhhS-1),3]<>"\n"];
];
i++;];


(* Z gamma *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") 0._dp \n"];
i++;];


(* gamma gamma *)


For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
If[genhh==1,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\")  Real(ratioPP,dp) \n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\")  Real(ratioPP("<>ToString[i]<>"),dp) \n"];
];,
If[genAh==1,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") Real(ratioPPP,dp) \n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") Real(ratioPPP("<>ToString[(i-getGenSPheno[HiggsBoson]+getGenSPhenoStart[PseudoScalar]-1)]<>"),dp) \n"];
];
];
i++;];


(* glu glu *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
If[i<=genhh,
If[genhh==1,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\")  Real(ratioGG,dp) \n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\")  Real(ratioGG("<>ToString[i]<>"),dp) \n"];
];,
If[genAh==1,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") Real(ratioPGG,dp) \n"];,
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") Real(ratioPGG("<>ToString[(i-getGenSPheno[HiggsBoson]+getGenSPhenoStart[PseudoScalar]-1)]<>"),dp) \n"];
];
];
i++;];

(* glu glu Z *)

For[i=genhhS,i<=(genhh+genAh+1 -genAhS),
WriteString[sphenoInOut,"Write(89,\"(3e16.8)\",advance=\"No\") 0._dp \n"];
i++;];


For[j=genhhS,j<=(genhh+genAh+1 -genAhS),
For[i=genhhS,i<=j,
If[j<=genhh,
WriteString[sphenoInOut,  "Write(89,\"(e16.8)\",advance=\"No\") Real(CPL_H_H_Z("<>ToString[i]<>","<>ToString[j]<>"), dp) \n " ];,
If[i<=genhh,
WriteString[sphenoInOut,  "Write(89,\"(e16.8)\",advance=\"No\") Real(CPL_A_H_Z("<>ToString[j-genhh+genAhS-1]<>","<>ToString[i]<>"), dp) \n " ];,
WriteString[sphenoInOut,  "Write(89,\"(e16.8)\",advance=\"No\") Real(CPL_A_A_Z("<>ToString[j-genhh+genAhS-1]<>","<>ToString[i-genhh+genAhS-1]<>"), dp) \n " ];
];
];
i++;];
j++;];



WriteString[sphenoInOut, "\n \n \n"];

WriteString[sphenoInOut,"Write(93,\"(I1)\",advance=\"No\") 1 \n"];
If[getGen[ChargedHiggs]>1,
For[i=getGenSPhenoStart[ChargedHiggs],i<=getGen[ChargedHiggs],
WriteString[sphenoInOut, "Write(93,\"(e16.8)\",advance=\"No\") 0.0000 \n"];
i++;];,
WriteString[sphenoInOut, "Write(93,\"(e16.8)\",advance=\"No\") 0.0000 \n"];
];


WriteString[sphenoInOut, "Close(87) \n"];
WriteString[sphenoInOut, "Close(88) \n"];
WriteString[sphenoInOut, "Close(90) \n"];
WriteString[sphenoInOut, "Close(91) \n"];
WriteString[sphenoInOut, "Close(92) \n"];
WriteString[sphenoInOut, "Close(93) \n"];



WriteString[sphenoInOut,"End Subroutine WriteHiggsBounds \n \n \n"];
];
