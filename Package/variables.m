(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)




(* ----------------------------------------- *)
(* List with parameters for RGE calculation  *)
(* ----------------------------------------- *)


SA`ListM2ij={};
SA`ListM2ijOFF={};
SA`ListGaugino={};
SA`ListGauge={};
SA`ListVEVi={};
SA`ListGaugeMixedAll={};
SA`ListGaugeMixed={};
SA`ListGaugeMixed2={};
SA`ListGauginoMixed={};
SA`ListGauginoMixed2={};

SA`LagrangianContractions={};

SA`subUnitaryCondition={};

SA`subDeleteParticles={};
SA`CreatedsubDeleteParticles=False;

SA`NewGaugeSector=False;

SA`ListWeightFactors={};

SA`SPhenoCleanUp = True;

SA`RnR=1;

SA`KineticMixing=False;
SA`KineticMixingParameters={};

SA`NonZeroEntries={};

SA`ListInvarianz={};

SA`QNscalar={};
SA`QNfermion={};
SA`QNaux={};
SA`QNvec={};
SA`QNgaugino={};

SA`CPViolationHiggsSector=False;

SA`GaugeFixingRXi={};

SA`RemovedGaugeBosons = {};
SA`RemovedGaugeGhosts = {};

SA`GaugeFixingTerms={};

SA`RotationMatricesGaugeSector={};

SA`DiracGauginoMassTerms={};

SA`DiracGauginos={};
SA`DiracGauginosInfo={};

SA`ListMixingMatrices={};

UsePDGIX = False;

AddTterms = True;
AddBterms = True;
AddLterms = True;
AddSoftScalarMasses = True;
AddSoftGauginoMasses=True;

AssumptionsTadpoleEquations={};

NeglectLoopsInvolving={};

SA`ListAllFieldsInit={};


InitArrays:=Block[{},

Print["Preparing arrays"];

Clear[DEFINITION];
Clear[Fields];
Clear[dirac];
SA`CasimirList={};
NonSUNindices={};
VectorParameters={};
SimplifyTraces=True;
Fields=Table[0,{99}];
FermionFields=Table[0,{99}];
ScalarFields=Table[0,{99}];
SuperFields=Table[0,{99}];
Gauge=Table[0,{99}];
Global=Table[0,{99}];
dirac=Table[0,{99}];
mixMass=Table[0,{99}];
IntegrateOut= Table[0,{99}];
DeleteParticles= Table[0,{99}];
IntegrateOutGauge= Table[0,{99}];
LesHouchesList={};
BrokenSymmetries={};
ReplaceExpandedIndices={};
rotationAngleGaugeBoson={};
SpectrumFile=None;
UnfixedCharges={};
U1MixingParameters={};
SA`CurrentStates=ALL;
NoU1Mixing=False;
subNum={};
vacuum = {};
vacuumF = {};
vacuumV = {};
vacuumS = {};
vacuumG = {};
vacuumA = {};
NonSUSYModel=False;
dimMatrizesAll = {};
UsedDependences ={};
ListMatrixProdukt={};
NoDTerms = False;
NoFTerms = False;
RParityConservation  = True;
subAlways={};
Abbr={};
bosons={};
parameters={};
Gauginos={};
OnlyOneGen={};
SetNaNtoZero=False;
MasslessBosons={};
ColoredGaugeParticles={};
SetGenerations=False;
ListSymmetricParameters={};
ListAntiSymmetricParameters={};
ParticlePhases = {};
PhasesToOneSub={};

WriteModelDirectories=False;

AdditionalParametersLagrange={};

KnownDynkinLabels={};



For[i=1,i<=Length[ParticleListOneGeneration],
If[ParticleListOneGeneration[[i,2]]===One,
ParticleListOneGeneration[[i,1]][{a_}]=.;,
ParticleListOneGeneration[[i,1]][ParticleListOneGeneration[[i,2]]]=.;
];
i++;];

];


(* Set Real Parameters *)

realVar={Mass};
realHeads={Mass,repl,Sin,Cos,Sec,Tan,Csc,Cot,Delta,Kronecker,epsTensor, g,sum};
Particles[Current] = {};
Particles[ALL] = {};

ListFields = {};
typeList={};


SA`SubMultipletStates={};

appendIndex={"","b","c","d","e","f","g","h","i","j","k"};

SA`SavedGenerators={};

(* For Lagrangian input and non susy RGEs *)
SA`FFSlist={};
SA`FFlist={};
SA`SSlist={};
SA`SSSlist={};
SA`SSSSlist={};

SupersymmetricModel=True;

SkipLHMessage = False;

SA`ClebschGordon={};

SA`LagTermsNonSUSY={};

SA`CheckSameVertices=True;

(*SA`KnonwCG={CG[SU[2],{{1},{1}}],CG[SU[2],{{2},{2}}],CG[SU[2],{{-1},{-1}}],CG[SU[2],{{-1},{1}}],CG[SU[2],{{1},{-1}}],CG[SU[3],{{1,1},{1,0},{0,1}}],CG[SU[3],{{1,1},{1,0},{0,1}}],CG[SU[3],{{0,1},{0,1},{0,1}}],CG[SU[3],{{1,0},{1,0},{1,0}}],CG[SU[3],{{1,0},{0,1}}],CG[SU[3],{{0,1},{1,0}}],CG[SU[3],{{1,0},{1,0},{1,0}}],CG[SU[2],{{1},{2},{1}}],CG[SU[2],{{-1},{2},{1}}]}; *)

SA`KnonwCG={CG[SU[2],{{1},{1}}], (* CG[SU[2],{{2},{2}}],  *)  CG[SU[2],{{-1},{-1}}],CG[SU[2],{{-1},{1}}],CG[SU[2],{{1},{-1}}],(* CG[SU[3],{{1,1},{1,0},{0,1}}],CG[SU[3],{{1,1},{1,0},{0,1}}], *)CG[SU[3],{{0,1},{0,1},{0,1}}],CG[SU[3],{{1,0},{1,0},{1,0}}],CG[SU[3],{{1,0},{0,1}}],CG[SU[3],{{0,1},{1,0}}],CG[SU[3],{{1,0},{1,0},{1,0}}]};

SA`ChargeGlobal[p_,x_]:=SA`ChargeGlobal[DeleteCases[p/.diracSub[ALL],0][[1]],x]/;MemberQ[diracFermions[ALL],p];
(* SA`ChargeGlobal[conj[p_],x_]:=SA`ChargeGlobal[p,x]; *)
SA`ChargeGlobal[conj[p_],x_]:=Block[{pos},
pos=Position[Global,x][[1,1]];
If[Global[[pos,1]]===U[1],
Return[-SA`ChargeGlobal[p,x]];,
Return[SA`ChargeGlobal[p,x]];
];
];

subFieldsOne = {};

SA`SymmetryAlreadyDefined={};

SA`CheckGlobalLagLevel=False;

IncludeFlavorKit = True;
IncludeOldObservables=False;

HiggsBosonPresent=False;
PseudoScalarBosonPresent=False;

AllowDecaysMasslessVectors={};

subCGCBroken={};

UseBoundarySUSYatEWSB = False;

{
 {LgravFFS = 0;},
 {LgravFFV = 0;}
}
LgravFFSV = 0;
LgravFFVV = 0;

SA`listFIU1={};

PrintAll[x_]:=Block[{},Print[x]; If[WriteDebugInformation,Write[LogFile,x]; WriteString[LogFile,"\n"];];];
PrintDebug[x_]:=Block[{},
If[WriteDebugInformation,Write[LogFile,x]; WriteString[LogFile,"\n"];];
 If[ShowDebugInformation,Print[x];]; 
];



