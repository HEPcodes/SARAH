(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Options[MakeUFO]={Exclude->{SSSS,GGS,GGV}, IncludeEffectiveHiggsVertices->True};

MakeUFO[opt___ ]:=GenerateUFO[Exclude/.{opt}/.Options[MakeUFO],IncludeEffectiveHiggsVertices/.{opt}/.Options[MakeUFO]];

GenerateUFO[Exclude_,effHiggsV_]:=Block[{i,j,k,temp,res,exclude= Join[Exclude,{ASS}],factor,startedtime},
Print[StyleForm["Generate UFO model files","Section"]];
startedtime=TimeUsed[];
CurrentEigenstates=Last[NameOfStates];

SA`CurrentStates=CurrentEigenstates;

SA`subEW={};

For[i=1,i<=Length[parameters],
If[parameters[[i,1]]=!=strongCoupling,
If[FreeQ[Gauge,parameters[[i,1]]]==False || FreeQ[SuperPotential,parameters[[i,1]]]==False || Head[parameters[[i,1]]]===T,
SA`subEW=Join[SA`subEW,{parameters[[i,1]][a__][b__]->gEW,parameters[[i,1]][a__]->gEW,parameters[[i,1]]->gEW}];
];
];
i++;];

For[i=1,i<=Length[subAlways],
temp=subAlways[[i]]//. Part->PART /. PART[a_,b___]->a;
temp = Cases[temp[[2]],x_Symbol,1] /. sum[a___]->1;
If[FreeQ[SA`subEW,subAlways[[1]]]==False, SA`subEW = Join[SA`subEW,Table[temp[[j]]->gEW,{j,1,Length[temp]}]]; ];
i++;
];

For[i=1,i<=Length[subDependences],
temp=subDependences[[i]]//. Part->PART /. PART[a_,b___]->a;
temp = Cases[temp[[2]],x_Symbol,1] /. sum[a___]->1;
If[FreeQ[SA`subEW,subDependences[[i,1]]]==False, SA`subEW = Join[SA`subEW,Table[temp[[j]]->gEW,{j,1,Length[temp]}]]; ];
i++;
];

(*
If[FreeQ[NameOfStates,InitalizedVertexCalculaton]\[Equal]True,
Message[ModelFile::NoVertices];,
*)
If[FreeQ[NameOfStates,InitalizedVertexCalculaton]==True,
Print["Have to calculate the vertices first..."];
ModelOutput[Last[NameOfStates]];
];

$sarahCurrentUfoDir=ToFileName[{$sarahCurrentOutputDir,"UFO"}];

If[FileExistsQ[$sarahCurrentUfoDir]=!=True,CreateDirectory[$sarahCurrentUfoDir];];

massless=Massless[CurrentEigenstates];

UfoActive=True;


CreateWOForm;

CreateUfoForm;



AddStandardFiles;

CreatePartListUfo;
CreateParamListWO;


WriteUfoParticles[CurrentEigenstates];

Print["Expand generations "];
For[i=1,i<=Length[ITypes],
If[FreeQ[exclude,ITypes[[i,1]]],
Print["    ... performed vertex type: ",ITypes[[i,1]]];
If[ITypes[[i,1]]===SSV || ITypes[[i,1]]===FFV || ITypes[[i,1]]===VVV,factor = -1;,factor=1;]; 
(* If[ITypes[[i,1]]===SSV || ITypes[[i,1]]===FFV,factor = -1;,factor=1;]; *)
If[Length[ITypes[[i]]]==4,
resUfo[ITypes[[i,1]]]=Flatten[ExpandUfo3[#,factor]&/@(SA`VertexList[ITypes[[i,1]]] //.subUfoColor),1];,
resUfo[ITypes[[i,1]]]=Flatten[ExpandUfo4[#,factor]&/@(SA`VertexList[ITypes[[i,1]]] //.subUfoColor),1];
];
 If[ITypes[[i,1]]===FFS,
resUfo[FFS]=resUfo[FFS] //. {ProjM->ProjMS,ProjP->ProjPS} //. {ProjMS->ProjP, ProjPS->ProjM};
]; 
];
i++;];

WriteUfoLorentz[CurrentEigenstates,exclude,effHiggsV];
(* WriteUfoParticles[Eigenstates]; *)
WriteUfoVertices[CurrentEigenstates,exclude,effHiggsV];

WriteUfoParameters[CurrentEigenstates,exclude,effHiggsV];

If[WriteModelDirectories==True,
WriteString[DirectoryNamesFile,"UFOdir="<>ToString[$sarahCurrentUfoDir] <>"\n"];
];

UfoActive=False;

Print[""];
Print["Done. UFO files generated in ",TimeUsed[]-startedtime, "s"];
Print["Output is saved in ",StyleForm[$sarahCurrentUfoDir,"Section",FontSize->10]];

(* ]; *)
];


ExtractColor[vertex_]:=Block[{i,j,temp={},temp2,res,CS,diffCol,coeff,current },
diffCol={fSU3,Delta,Lam, LamHlf,K6,K6Bar,T6,CG,Generator, epsTensor}; (* Possible Headers *)
diffColQT={ct1,ct2,ct3,ct4}; (* name of color indices *)
CS = Intersection[Cases[vertex,x_?((FreeQ[diffCol,Head[#]]==False && Head[#]=!=List && (Intersection[List@@#,diffColQT]=!={} || Head[#]===fSU3))&),10]];

If[CS=={}, (* only color singlets *)
temp = Join[temp,{{1,vertex}}];,
subs=DeleteCases[Reverse[Subsets[CS]],{}]; (* all possible combinations of color structures *)
For[j=1,j<=Length[subs],
current=Times@@subs[[j]]; 
SA`NrD=1;
coeff= ExtractColorCoeff[vertex,current]; (* get the coefficients *)

(* check, if there is no color structure left in the coefficient *)
If[coeff=!= 0 &&  Intersection[Cases[coeff,x_?((FreeQ[diffCol,Head[#]]==False && Head[#]=!=List && (Intersection[List@@#,diffColQT]=!={}||Head[#]===fSU3))&),10]]=={},
temp=Join[temp,{{current,coeff}}];
];
j++;];
];
Return[temp];
];

ExtractColorCoeff[vertex_,col_]:=Block[{i,temp},
If[Head[col]===Times,
temp=vertex;
For[i=1,i<=Length[col],temp=D[temp,col[[i]]];i++;];
Return[temp];,
Return[D[vertex,col]];
];
];




WriteUfoVertices[Eigenstates_,Exclude_,effHiggsV_]:=Block[{i,j},
Print["Write Vertex and Couplings file "];

SA`UfoCoupNr=1;
SA`UfoVertexNr=1;

UfoVF = OpenWrite[ToFileName[$sarahCurrentUfoDir,"vertices.py"]];
UfoCF = OpenWrite[ToFileName[$sarahCurrentUfoDir,"couplings.py"]];

WriteUfoHeadersCV;

For[i=1,i<=Length[ITypes],
If[FreeQ[Exclude,ITypes[[i,1]]],
(* Print["   ...  writing ",ITypes[[i,1]]]; *)
WriteUfoVertexList[resUfo[ITypes[[i,1]]],ITypes[[i,1]] ];
];
i++;];
If[effHiggsV,
WriteHiggsEffCouplingsUFO;
];


Close[UfoVF];
Close[UfoCF];
];

WriteHiggsEffCouplingsUFO:=Block[{i,j,k},
Print["Writing effective diphoton and digluon vertices"];
If[getGen[HiggsBoson]<99,
For[i=1,i<=getGen[HiggsBoson],
WriteString[UfoVF,"V_"<>ToString[SA`UfoVertexNr]<>" = Vertex(name = 'V_"<>ToString[SA`UfoVertexNr]<>"', \n"];
WriteString[UfoVF,"\t particles = [P."<>getOutputName[VectorP]<>", P."<>getOutputName[VectorP]<>", P."<>getOutputName[HiggsBoson]<>If[getGen[HiggsBoson]>1,ToString[i],""]<>"], \n"];
WriteString[UfoVF,"\t color = ['1'], \n"];
WriteString[UfoVF,"\t lorentz = [L.VVS99], \n"];
WriteString[UfoVF, "\t couplings = {(0,0):C.GC_"<>ToString[SA`UfoCoupNr]<>"}) \n \n \n"];

WriteString[UfoCF,"GC_"<>ToString[SA`UfoCoupNr]<>"=Coupling(name='GC_"<>ToString[SA`UfoCoupNr]<>"',\n"];
WriteString[UfoCF,"\t value='-(HPP"<>ToString[i]<>"*complex(0,1))', \n"];
WriteString[UfoCF,"\t order={'HIW':1})\n\n"];

SA`UfoVertexNr++;
SA`UfoCoupNr++;


WriteString[UfoVF,"V_"<>ToString[SA`UfoVertexNr]<>" = Vertex(name = 'V_"<>ToString[SA`UfoVertexNr]<>"', \n"];
WriteString[UfoVF,"\t particles = [P."<>getOutputName[VectorG]<>", P."<>getOutputName[VectorG]<>", P."<>getOutputName[HiggsBoson]<>If[getGen[HiggsBoson]>1,ToString[i],""]<>"], \n"];
WriteString[UfoVF,"\t color = ['Identity(1,2)'], \n"];
WriteString[UfoVF,"\t lorentz = [L.VVS99], \n"];
WriteString[UfoVF, "\t couplings = {(0,0):C.GC_"<>ToString[SA`UfoCoupNr]<>"}) \n \n \n"];

WriteString[UfoCF,"GC_"<>ToString[SA`UfoCoupNr]<>"=Coupling(name='GC_"<>ToString[SA`UfoCoupNr]<>"',\n"];
WriteString[UfoCF,"\t value='-(HGG"<>ToString[i]<>"*complex(0,1))', \n"];
WriteString[UfoCF,"\t order={'HIG':1})\n\n"];

SA`UfoVertexNr++;
SA`UfoCoupNr++;
i++;];
];

If[getGen[PseudoScalar]<99,
For[i=getGenSPhenoStart[PseudoScalar],i<=getGen[PseudoScalar],
WriteString[UfoVF,"V_"<>ToString[SA`UfoVertexNr]<>" = Vertex(name = 'V_"<>ToString[SA`UfoVertexNr]<>"', \n"];
WriteString[UfoVF,"\t particles = [P."<>getOutputName[VectorP]<>", P."<>getOutputName[VectorP]<>", P."<>getOutputName[PseudoScalar]<>If[getGen[PseudoScalar]>1,ToString[i],""]<>"], \n"];
WriteString[UfoVF,"\t color = ['1'], \n"];
WriteString[UfoVF,"\t lorentz = [L.VVS99], \n"];
WriteString[UfoVF, "\t couplings = {(0,0):C.GC_"<>ToString[SA`UfoCoupNr]<>"}) \n \n \n"];

WriteString[UfoCF,"GC_"<>ToString[SA`UfoCoupNr]<>"=Coupling(name='GC_"<>ToString[SA`UfoCoupNr]<>"',\n"];
WriteString[UfoCF,"\t value='-(APP"<>ToString[i]<>"*complex(0,1))', \n"];
WriteString[UfoCF,"\t order={'HIW':1})\n\n"];

SA`UfoVertexNr++;
SA`UfoCoupNr++;


WriteString[UfoVF,"V_"<>ToString[SA`UfoVertexNr]<>" = Vertex(name = 'V_"<>ToString[SA`UfoVertexNr]<>"', \n"];
WriteString[UfoVF,"\t particles = [P."<>getOutputName[VectorG]<>", P."<>getOutputName[VectorG]<>", P."<>getOutputName[PseudoScalar]<>If[getGen[PseudoScalar]>1,ToString[i],""]<>"], \n"];
WriteString[UfoVF,"\t color = ['Identity(1,2)'], \n"];
WriteString[UfoVF,"\t lorentz = [L.VVS99], \n"];
WriteString[UfoVF, "\t couplings = {(0,0):C.GC_"<>ToString[SA`UfoCoupNr]<>"}) \n \n \n"];

WriteString[UfoCF,"GC_"<>ToString[SA`UfoCoupNr]<>"=Coupling(name='GC_"<>ToString[SA`UfoCoupNr]<>"',\n"];
WriteString[UfoCF,"\t value='-(AGG"<>ToString[i]<>"*complex(0,1))', \n"];
WriteString[UfoCF,"\t order={'HIG':1})\n\n"];

SA`UfoVertexNr++;
SA`UfoCoupNr++;
i++;];
];

];


WriteUfoVertexList[list_,type_]:=Block[{i,j,k,startedtime},
startedtime=TimeUsed[];
Print["   ... Generic class: ",StyleForm[type,"Section",FontSize->10],". Writing: ",Dynamic[progressNrUFO[type]] ,"/",Length[list]". (",Dynamic[progressCoupUFO[type]],")"];

For[i=1,i<=Length[list],
progressNrUFO[type]=i;
progressCoupUFO[type]=list[[i,1]];
If[UfoLorentz[list[[i,2]],type]=!="",
WriteString[UfoVF,"V_"<>ToString[SA`UfoVertexNr]<>" = Vertex(name = 'V_"<>ToString[SA`UfoVertexNr]<>"', \n"];
WriteString[UfoVF,"\t particles = ["<>UfoPartList[list[[i,1]]]<>"], \n"];
WriteString[UfoVF,"\t color = [" <> UfoColor[list[[i,2]]]<>"], \n"];
WriteString[UfoVF,"\t lorentz = ["<>UfoLorentz[list[[i,2]],type] <>"], \n"];
WriteString[UfoVF, "\t couplings = {"<>UfoCouplings[list[[i,2]]]<>"}) \n \n \n"];
SA`UfoVertexNr++;
For[j=1,j<=Length[list[[i,2]]],
For[k=1,k<=Length[list[[i,2,j,1]]],
If[list[[i,2,j,1,k,2]]=!=0,
WriteUfoCoupling[list[[i,2,j,1,k,2]],type];
];
k++;];
j++;];
];
i++;];
progressCoupUFO[type]="All done in "<>ToString[TimeUsed[]-startedtime]<>"s";
];

UfoPartList[fields_]:=Block[{i,res=""},
For[i=1,i<=Length[fields],
res = res <> "P."<>ToString[fields[[i,1]]] ;
If[i<Length[fields],res = res<>", "];
i++;];
Return[res];
];

UfoColor[coup_]:=Block[{i,j,res="",temp={}},

For[i=1,i<=Length[coup],
For[j=1,j<=Length[coup[[i,1]]],
If[coup[[i,1,j,2]]=!=0, temp = Join[temp,{coup[[i,1,j,1]]}];];
j++;];
i++;];
temp = Intersection[temp];

For[i=1,i<=Length[temp],
res = res <>"'"<> UfoForm[temp[[i]]]<>"'";
If[i<Length[temp],res = res<>", "];
i++;];

Return[res];
];

UfoLorentz[coup_,type_]:=Block[{i,res="",temp={},pos,clist},
clist = Select[SA`UfoLorentzTypes,(#[[3]]===type)&];
For[i=1,i<=Length[coup],
If[Sum[Abs[coup[[i,1,j,2]]],{j,1,Length[coup[[i,1]]]}]=!=0,
pos = Position[clist,coup[[i,2]]//.subUfoLorentz];
temp = Join[temp,{clist[[pos[[1,1]],2]]}];
];
i++;];

temp = Intersection[temp];

For[i=1,i<=Length[temp],
res = res <>"L."<> UfoForm[temp[[i]]];
If[i<Length[temp],res = res<>","];
i++;];

Return[res];
];



getUfoLorentz[term_]:=Block[{pos},
pos=Position[SA`UfoLorentzTypes,term];
Return[SA`UfoLorentzTypes[[pos[[1,1]]]][[2]]];
];

UfoCouplings[coup_]:=Block[{i,res="",start=SA`UfoCoupNr,colornr=1, clist={}, llist={},written=False},
For[i=1,i<=Length[coup],
pos = Position[SA`UfoLorentzTypes,coup[[i,2]] //.subUfoLorentz];
If[Sum[Abs[coup[[i,1,j,2]]],{j,1,Length[coup[[i,1]]]}]=!=0,llist = Join[llist,{SA`UfoLorentzTypes[[pos[[1,1]],2]]}];];
For[j=1,j<=Length[coup[[i,1]]],
If[coup[[i,1,j,2]]=!=0,clist = Join[clist,{coup[[i,1,j,1]]}];];
j++;];
i++;];

llist = Intersection[llist];
clist = Intersection[clist];

For[i=1,i<=Length[coup],
For[j=1,j<=Length[coup[[i,1]]],
pos = Position[SA`UfoLorentzTypes,coup[[i,2]] //.subUfoLorentz];
cl = SA`UfoLorentzTypes[[pos[[1,1]],2]];
If[coup[[i,1,j,2]]=!=0,
If[written==True, res=res<>",";,written=True];
res = res <>"("<>ToString[Position[clist,coup[[i,1,j,1]]][[1,1]]-1]<>","<>ToString[Position[llist,cl][[1,1]]-1]<>"):";
res = res <>"C.GC_"<>ToString[start];
(* If[i<Length[coup] || j<Length[coup[[i,1]]],res = res<>", "]; *)
start++;
];
j++;];
i++;];


Return[res];
];


WriteUfoCoupling[coup_,type_]:=Block[{i},
WriteString[UfoCF,"GC_"<>ToString[SA`UfoCoupNr] <>" = Coupling("];
WriteString[UfoCF, "name = 'GC_"<>ToString[SA`UfoCoupNr]<>"',\n"];
WriteString[UfoCF,"\t value = '"<>UfoForm[coup]<>"', \n"];
WriteString[UfoCF,"\t order = {"<>UfoCouplingOrder[coup,type]<>"} ) \n \n"];
SA`UfoCoupNr++;
];

(*
UfoCouplingOrder[coup_,type_]:=Block[{i,j, resC,temp,power},
temp = coup  /. SA`subEW  /. conj[gEW]\[Rule]gEW;
If[temp===0,
If[StringLength[ToString[type]]<4,
Return["'QED':1"];,
Return["'QED':2"];
];
];
If[FreeQ[temp,gEW]\[Equal]False,
power = Intersection[Cases[temp,gEW^a_,10]  /. a_^b_\[Rule]b];
If[power==={} || StringLength[ToString[type]]<4,
resC = "'QED':1";,
resC = "'QED':"<>ToString[Min[power]];
];
];

If[FreeQ[coup,strongCoupling]\[Equal]False,
If[Head[res]===String,resC=resC<>",";,resC="";];
power = Intersection[Cases[temp,strongCoupling^a_,10]  /. a_^b_\[Rule]b];
If[power==={} || StringLength[ToString[type]]<4,
resC =resC<> "'QCD':1";,
resC = resC<>"'QCD':"<>ToString[Min[power]];
];
];
Return[resC];
]; *)

UfoCouplingOrder[coup_,type_]:=Block[{i,j, resC,temp,power},
If[FreeQ[coup,strongCoupling]==False,
power = Intersection[Cases[coup,strongCoupling^a_,10]  /. a_^b_->b];,
power=0;
];
If[power==={}, powerQCD = 1;,powerQCD=Min[power]];
Switch[StringLength[ToString[type]],
3,
	powerQED = 1-powerQCD;,
4,
	powerQED = 2-powerQCD;
];
res="";
If[powerQED > 0,
res=res<> "'QED':"<>ToString[powerQED];
If[powerQCD>0,res=res<>", "];
];
If[powerQCD > 0,
res=res<> "'QCD':"<>ToString[powerQCD];
];
Return[res];
];

WriteUfoHeadersCV:= Block[{Minutes},
WriteString[UfoVF,"# ------------------------------------------------------------------------------  \n"];
WriteString[UfoVF,"# This model file was automatically created by SARAH version"<>SA`Version<>" \n"];
WriteString[UfoVF,"# SARAH References: arXiv:0806.0538, 0909.2863, 1002.0840, 1207.0906, 1309.7223   \n"];
WriteString[UfoVF,"# (c) Florian Staub, 2013  \n"];
WriteString[UfoVF,"# -------------------------------------------------------------------------------  \n"];
Minutes=If[Date[][[5]]<10,"0"<>ToString[Date[][[5]]],ToString[Date[][[5]]]];
WriteString[UfoVF,"# File created at "<>ToString[Date[][[4]]]<>":"<>Minutes<>" on "<>ToString[Date[][[3]]]<>"."<>ToString[Date[][[2]]]<>"."<>ToString[Date[][[1]]]<>"   \n"];
WriteString[UfoVF,"# ----------------------------------------------------------------------  \n \n \n"];

WriteString[UfoVF,"from object_library import all_vertices,Vertex \n"];
WriteString[UfoVF,"import particles as P \n"];
WriteString[UfoVF,"import couplings as C \n"];
WriteString[UfoVF,"import lorentz as L \n \n \n"];

WriteString[UfoCF,"from object_library import all_couplings,Coupling \n"];
WriteString[UfoCF,"from cmath import exp \n"];
WriteString[UfoCF,"from function_library import complexconjugate,re,im,csc,sec,acsc,asec \n \n \n"];

];


WriteUfoLorentz[Eigenstates_,Exclude_,effHiggsV_]:=Block[{i,temp},
SA`UfoLorentzTypes = {};

UfoLF = OpenWrite[ToFileName[$sarahCurrentUfoDir,"lorentz.py"]];

WriteString[UfoLF,"# ----------------------------------------------------------------------  \n"];
WriteString[UfoLF,"# This model file was automatically created by SARAH version"<>SA`Version<>" \n"];
WriteString[UfoLF,"# SARAH References: arXiv:0806.0538, arXiv:0909.2863, arXiv:1002.0840    \n"];
WriteString[UfoLF,"# (c) Florian Staub, 2011  \n"];
WriteString[UfoLF,"# ----------------------------------------------------------------------  \n"];
WriteString[UfoLF,"# File created at "<>ToString[Date[][[4]]]<>":"<>ToString[Date[][[5]]]<>" on "<>ToString[Date[][[3]]]<>"."<>ToString[Date[][[2]]]<>"."<>ToString[Date[][[1]]]<>"   \n"];
WriteString[UfoLF,"# ----------------------------------------------------------------------  \n \n \n"];

WriteString[UfoLF,"from object_library import all_lorentz,Lorentz \n"];
(* WriteString[UfoLF,"from function_library import conj \n \n \n"]; *)
WriteString[UfoLF,"from function_library import complexconjugate,re,im,csc,sec,acsc,asec \n \n \n"];

For[i=1,i<=Length[ITypes],
If[FreeQ[Exclude,ITypes[[i,1]]],
If[Head[SA`VertexList[ITypes[[i,1]]]]===List &&SA`VertexList[ITypes[[i,1]]]=!={} && FreeQ[ITypes[[i]],A],
(* temp = Intersection[Flatten[Table[Table[SA`VertexList[ITypes[[i,1]]][[j,k,2]],{k,2,Length[SA`VertexList[ITypes[[i,1]]][[j]]]}],{j,1,Length[SA`VertexList[ITypes[[i,1]]]]}]] //. subUfoLorentz]; *)
temp = Intersection[Flatten[Table[Table[SA`VertexList[ITypes[[i,1]]][[j,k,2]]/. Flatten[Replace[SA`VertexList[ITypes[[i,1]]][[j,1]] , a_ :>{Mom[a,b_]->P[b,Position[SA`VertexList[ITypes[[i,1]]][[j,1]],a][[1,1]]]},{1}]],{k,2,Length[SA`VertexList[ITypes[[i,1]]][[j]]]}],{j,1,Length[SA`VertexList[ITypes[[i,1]]]]}]] //. subUfoLorentz];
temp = Reverse[temp];
For[j=1,j<=Length[temp],
WriteString[UfoLF,ToString[ITypes[[i,1]]]<>ToString[j]<>" = Lorentz(name = '"<>ToString[ITypes[[i,1]]]<>ToString[j]<>"', \n"];
WriteString[UfoLF,"\t spins = ["<>StringReplace[ToString[Drop[ITypes[[i]],1] /. {S->1, F->2, V->3, G->-1}],{"{"->"","}"->""}]<>"],\n"];
WriteString[UfoLF,"\t structure = '"<>UfoForm[Expand[temp[[j]]]]<>"' ) \n \n \n"];
SA`UfoLorentzTypes  = Join[SA`UfoLorentzTypes ,{{temp[[j]],ToExpression[ToString[ITypes[[i,1]]]<>ToString[j]], ITypes[[i,1]]}}];
j++;];
];
];
i++;];

If[effHiggsV,
WriteString[UfoLF,"VVS99 = Lorentz(name='VVSpp', \n"];
WriteString[UfoLF,"spins=[3,3,1], \n"];
WriteString[UfoLF,"structure='P(1,2)*P(2,1)-P(-1,1)*P(-1,2)*Metric(1,2)')\n"];
];

Close[UfoLF];
];


WriteUfoParticles[Eigenstates_]:=Block[{i,j},

Print["Write particles files"];

UfoPF = OpenWrite[ToFileName[$sarahCurrentUfoDir,"particles.py"]];

WriteString[UfoPF,"# ----------------------------------------------------------------------  \n"];
WriteString[UfoPF,"# This model file was automatically created by SARAH version"<>SA`Version<>" \n"];
WriteString[UfoPF,"# SARAH References: arXiv:0806.0538, arXiv:0909.2863, arXiv:1002.0840    \n"];
WriteString[UfoPF,"# (c) Florian Staub, 2011  \n"];
WriteString[UfoPF,"# ----------------------------------------------------------------------  \n"];
WriteString[UfoPF,"# File created at "<>ToString[Date[][[4]]]<>":"<>ToString[Date[][[5]]]<>" on "<>ToString[Date[][[3]]]<>"."<>ToString[Date[][[2]]]<>"."<>ToString[Date[][[1]]]<>"   \n"];
WriteString[UfoPF,"# ----------------------------------------------------------------------  \n \n \n"];


WriteString[UfoPF,"from __future__ import division \n"];
WriteString[UfoPF,"from object_library import all_particles,Particle \n"];
WriteString[UfoPF,"import parameters as Param \n\n\n"];

For[i=1,i<=Length[PartListFR],
For[j=1,j<=Length[PartListFR[[i,2]]],
entry =PartListFR[[i,2,j]]; 
WriteString[UfoPF,entry[[1]] <> " = Particle(pdg_code ="<>ToString[entry[[9]]] <>", \n"];
WriteString[UfoPF,"\t name = '"<>entry[[1]] <>"' ,\n"];
WriteString[UfoPF,"\t antiname = '"<>entry[[2]] <>"' ,\n"];
WriteString[UfoPF,"\t spin = "<>ToString[entry[[3]] /. {S->1 , F->2 , V->3, G->-1}] <>" ,\n"];
 WriteString[UfoPF,"\t color = " <> ToString[entry[[7]] /. {S->1,T->3,Six->6,O->8}] <>" ,\n"]; 
(* WriteString[UfoPF,"\t mass = '"<>ToString[entry[[5]]] <>"' ,\n"];
WriteString[UfoPF,"\t width = '"<>ToString[entry[[6]]] <>"' ,\n"]; *)
If[entry[[13]]=!=NoGS,
WriteString[UfoPF,"\t mass = Param.ZERO ,\n"];
WriteString[UfoPF,"\t width = Param.ZERO ,\n"];,
WriteString[UfoPF,"\t mass = Param."<>ToString[entry[[5]]] <>" ,\n"];
WriteString[UfoPF,"\t width = Param."<>ToString[entry[[6]]] <>" ,\n"];
];
If[entry[[3]]===G, 
WriteString[UfoPF,"\t GhostNumber = 1, \n"];,
WriteString[UfoPF,"\t GhostNumber = 0, \n"];
];
If[getRParity[entry[[15]]/. a_[b_Integer]->a,EWSB]===1,
WriteString[UfoPF,"\t line = '"<>(entry[[4]] /. {S->"straight", D->"dashed", W->"wavy",C->"dotted"})<>"' ,\n"];,
If[(entry[[15]]/. a_[b_Integer]->a)===Gluino,
WriteString[UfoPF,"\t line = '"<>(entry[[4]] /. {S->"scurly", D->"dashed", W->"wavy",C->"dotted"})<>"' ,\n"];,
WriteString[UfoPF,"\t line = '"<>(entry[[4]] /. {S->"swavy", D->"dashed", W->"wavy",C->"dotted"})<>"' ,\n"];
];
];
WriteString[UfoPF,"\t charge = "<>ToString[InputForm[entry[[14]]/. ZERO->0]]<>" ,\n"]; 
If[entry[[13]]=!=NoGS,
WriteString[UfoPF,"\t GoldstoneBoson = True ,\n"];
];

(*
WriteString[UfoPF,"\t texname = '"<>entry[[11]] <>"' ,\n"];
WriteString[UfoPF,"\t antitexname = '"<>entry[[12]] <>"' ) \n \n"];

*)


WriteString[UfoPF,"\t texname = '"<>entry[[1]] <>"' ,\n"];
WriteString[UfoPF,"\t antitexname = '"<>entry[[2]] <>"' ) \n \n"];



If[entry[[2]]!=entry[[1]],
WriteString[UfoPF,entry[[2]] <> " = "<>entry[[1]]<>".anti() \n \n \n"];
];
j++;];
i++;];

Close[UfoPF];

];

UfoForm[x_]:=Return[StringReplace[ToString[CForm[x  /. ReplacementsWO /. strongCoupling->G /. subGreek/. Mass[A_[{b_,c___}]]:>getMassW[A,b] /. Mass[A_]:>getMassW[A]]],{"^"->"**","conj"->"complexconjugate"}]]; 
(* UfoForm[x_]:=Return[StringReplace[ToString[CForm[x  /. ReplacementsWO /. strongCoupling\[Rule]G /. subGreek]],{"^"->"**"}]]; *)


ExpandUfo4[vlist_,prefac_]:=Block[{i,j,gf1,gf2,gf3,gf4,start1,start2,start3,start4,iter1,iter2,iter3,iter4,ff1,ff2,ff3,ff4,fstart1,fstart2,fstart3,fstart4,fiter1,fiter2,fiter3,fiter4,temp},
gf1=getGen[vlist[[1,1]]];
gf2=getGen[vlist[[1,2]]];
gf3=getGen[vlist[[1,3]]];
gf4=getGen[vlist[[1,4]]];

ff1=getFla[vlist[[1,1]]];
ff2=getFla[vlist[[1,2]]];
ff3=getFla[vlist[[1,3]]];
ff4=getFla[vlist[[1,4]]];

(*
If[getColorRep[vlist[[1,1]]]===O,ind1=nix1;, ind1=gt1;];
If[getColorRep[vlist[[1,2]]]===O,ind2=nix1;, ind2=gt2;];
If[getColorRep[vlist[[1,3]]]===O,ind3=nix1;, ind3=gt3;];
If[getColorRep[vlist[[1,4]]]===O,ind4=nix1;, ind4=gt4;];
*)

ind1=gt1; ind2=gt2;ind3=gt3;ind4=gt4;

temp = {};
value=vlist[[2]];


If[(vlist[[1,2]] /. {gt2->gt1,ft2->ft1} )===vlist[[1,1]],
start2=Hold[iter1];
fstart2=Hold[fiter1];,
start2=1;
fstart2=1;
];

If[(vlist[[1,3]] /. {gt3->gt2,ft3->ft2} )===vlist[[1,2]],
start3=Hold[iter2];
fstart3=Hold[fiter2];,
If[(vlist[[1,3]] /. {gt3->gt1,ft3->ft1} )===vlist[[1,1]],
start3=Hold[iter1];
fstart3=Hold[fiter1];,
start3=1;
fstart3=1;
];
];


If[(vlist[[1,4]] /. {gt4->gt3,ft4->ft3} )===vlist[[1,3]],
start4=Hold[iter3];
fstart4=Hold[fiter3];,
If[(vlist[[1,4]] /. {gt4->gt2,ft4->ft2} )===vlist[[1,2]],
start4=Hold[iter2];
fstart4=Hold[fiter2];,
If[(vlist[[1,4]] /. {gt4->gt1,ft4->ft1} )===vlist[[1,1]],
start4=Hold[iter1];
fstart4=Hold[fiter1];,
start4=1;
fstart4=1;
];
];
];



If[FreeQ[vlist,Delta[gt1,gt2]]==False,start2=Hold[iter1];gf2=Hold[iter1];];
If[FreeQ[vlist,Delta[gt1,gt3]]==False,start3=Hold[iter1];gf3=Hold[iter1];];
If[FreeQ[vlist,Delta[gt2,gt3]]==False,start3=Hold[iter2];gf3=Hold[iter2];];
If[FreeQ[vlist,Delta[gt1,gt4]]==False,start4=Hold[iter1];gf4=Hold[iter1];];
If[FreeQ[vlist,Delta[gt3,gt4]]==False,start4=Hold[iter3];gf4=Hold[iter3];];
If[FreeQ[vlist,Delta[gt2,gt4]]==False,start4=Hold[iter2];gf4=Hold[iter2];];

If[FreeQ[vlist,Delta[ft1,ft2]]==False,fstart2=Hold[fiter1];ff2=Hold[fiter1];];
If[FreeQ[vlist,Delta[ft1,ft3]]==False,fstart3=Hold[fiter1];ff3=Hold[fiter1];];
If[FreeQ[vlist,Delta[ft2,ft3]]==False,fstart3=Hold[fiter2];ff3=Hold[fiter2];];
If[FreeQ[vlist,Delta[ft1,ft4]]==False,fstart4=Hold[fiter1];ff4=Hold[fiter1];];
If[FreeQ[vlist,Delta[ft3,ft4]]==False,fstart4=Hold[fiter3];ff4=Hold[fiter3];];
If[FreeQ[vlist,Delta[ft2,ft4]]==False,fstart4=Hold[fiter2];ff4=Hold[fiter2];];

value =Table[{ExtractColor[prefac*conj[vlist[[i,1]]/.Complex[a_,b_]->Complex[a,-b] ]],vlist[[i,2]] //. subUfoLorentz},{i,2,Length[vlist]}] //. sum[a_,b_,c_,d_]:>Sum[d,{a,b,c}] ;

For[iter1=1,iter1<=gf1,
For[fiter1=1,fiter1<=ff1,
For[iter2=ReleaseHold[start2],iter2<=ReleaseHold[gf2],
For[fiter2=ReleaseHold[fstart2],fiter2<=ReleaseHold[ff2],
For[iter3=ReleaseHold[start3],iter3<=ReleaseHold[gf3],
For[fiter3=ReleaseHold[fstart3],fiter3<=ReleaseHold[ff3],
For[iter4=ReleaseHold[start4],iter4<=ReleaseHold[gf4],
For[fiter4=ReleaseHold[fstart4],fiter4<=ReleaseHold[ff4],
temp = Join[temp,{{Table[{vlist[[1,k]],k} //. {ind1->iter1,ind2->iter2,ind3->iter3, ind4->iter4,ft1->fiter1,ft2->fiter2,ft3->fiter3,ft4->fiter4} //.subAlways/. subPartWO,{k,1,Length[vlist[[1]]]}], value //. {ind1->iter1,ind2->iter2,ind3->iter3,ind4->iter4,ft1->fiter1,ft2->fiter2,ft3->fiter3,ft4->fiter4}}}]; 
fiter4++;];
iter4++;];
fiter3++;];
iter3++;];
fiter2++;];
iter2++;];
fiter1++;];
iter1++;];
Return[temp];
];


ExpandUfo3[vlist_,prefac_]:=Block[{i,j,gf1,gf2,gf3,start1,start2,start3,iter1,iter2,iter3,ff1,ff2,ff3,fstart1,fstart2,fstart3,fiter1,fiter2,fiter3,temp,colorstructures},
gf1=getGen[vlist[[1,1]] /. CC[a_]->a];
gf2=getGen[vlist[[1,2]]/. CC[a_]->a];
gf3=getGen[vlist[[1,3]]/. CC[a_]->a];

ff1=getFla[vlist[[1,1]] /. CC[a_]->a];
ff2=getFla[vlist[[1,2]]/. CC[a_]->a];
ff3=getFla[vlist[[1,3]]/. CC[a_]->a];

(*
If[getColorRep[vlist[[1,1]]]===O,ind1=nix1;, ind1=gt1;];
If[getColorRep[vlist[[1,2]]]===O,ind2=nix1;, ind2=gt2;];
If[getColorRep[vlist[[1,3]]]===O,ind3=nix1;, ind3=gt3;];
*)

ind1=gt1; ind2=gt2;ind3=gt3;

colorstructures=ExtractColor[Drop[vlist,1]];

If[(vlist[[1,2]] /. {gt2->gt1,ft2->ft1, ct2->ct1})===vlist[[1,1]],
start2=Hold[iter1];
fstart2=Hold[fiter1];,
start2=1;
fstart2=1;
];

If[(vlist[[1,3]] /. {gt3->gt2,ft3->ft2, ct3->ct2})===vlist[[1,2]],
start3=Hold[iter2];
fstart3=Hold[fiter2];,
If[(vlist[[1,3]] /. {gt3->gt1,ft3->ft1, ct3->ct1})===vlist[[1,1]],
start3=Hold[iter1];
fstart3=Hold[fiter1];,
start3=1;
fstart3=1;
];
];

(*
conj[CG[SU[3],{r1_,{1,1},r2_}]][a_,b_,c_]:=CG[SU[3],{r1,{1,1},r2}][c,b,a];
conj[CG[SU[3],{{1,1},r1_,r2_}]][a_,b_,c_]:=CG[SU[3],{{1,1},r1,r2}][a,c,b];
conj[CG[SU[3],{r1_,r2_,{1,1}}]][a_,b_,c_]:=CG[SU[3],{{1,1},r1,r2}][b,a,c];
*)
conj[LamHlf[a_,b_,c_]]=LamHlf[a,b,c];
conj[fSU3[a__]]=fSU3[a];
conj[T6[a__]]=T6[a];

If[FreeQ[vlist,Delta[gt1,gt2]]==False, start2=Hold[iter1]; gf2=Hold[iter1]; ];
If[FreeQ[vlist,Delta[gt1,gt3]]==False, start3=Hold[iter1]; gf3=Hold[iter1];];
If[FreeQ[vlist,Delta[gt2,gt3]]==False,start3=Hold[iter2]; gf3=Hold[iter2];];

If[FreeQ[vlist,Delta[ft1,ft2]]==False, fstart2=Hold[fiter1]; ff2=Hold[fiter1]; ];
If[FreeQ[vlist,Delta[ft1,ft3]]==False, fstart3=Hold[fiter1]; ff3=Hold[fiter1];];
If[FreeQ[vlist,Delta[ft2,ft3]]==False, fstart3=Hold[fiter2]; ff3=Hold[fiter2];];

If[FreeQ[vlist[[1]],bar]==False||FreeQ[vlist[[1]],conj]==False,subAntiLC={epsTensor->epsTensorBar};,subAntiLC={};];

value =Table[{ExtractColor[prefac*conj[vlist[[i,1]]/.Complex[a_,b_]->Complex[a,-b]] /.fSU3[a__]->-fSU3[a]] /. subAntiLC,vlist[[i,2]] //. Flatten[Replace[vlist[[1]], a_ :>{Mom[a,b_]->P[b,Position[vlist[[1]],a][[1,1]]]},{1}]]//. subUfoLorentz},{i,2,Length[vlist]}] //. sum[a_,b_,c_,d_]:>Sum[d,{a,b,c}] ;
temp={};


For[iter1=1,iter1<=gf1,
For[fiter1=1,fiter1<=ff1,
For[iter2=ReleaseHold[start2],iter2<=ReleaseHold[gf2],
For[fiter2=ReleaseHold[fstart2],fiter2<=ReleaseHold[ff2],
For[iter3=ReleaseHold[start3],iter3<=ReleaseHold[gf3],
For[fiter3=ReleaseHold[fstart3],fiter3<=ReleaseHold[ff3],
valueC =value //. {ind1->iter1,ind2->iter2,ind3->iter3,ft1->fiter1,ft2->fiter2,ft3->fiter3};
If[Intersection[valueC]=!={0},
 temp = Join[temp,{{Table[{vlist[[1,k]],k} //. {ind1->iter1,ind2->iter2,ind3->iter3,ft1->fiter1,ft2->fiter2,ft3->fiter3} //.subAlways /. subPartWO,{k,1,Length[vlist[[1]]]}],valueC}}]; 
];
fiter3++;];
iter3++;];
fiter2++;];
iter2++;];
fiter1++;];
iter1++;];
Return[temp];
];


subUfoColor={
Lam[a_,b_,c_]->2LamHlf[a,b,c],
 sum[a_,b_,c_,fSU3[d___,x_,e___] fSU3[f___,x_,g___]]-> fSU3[d,-1,e] fSU3[f,-1,g],
sum[a_,b_,c_,epsTensor[d___,x_,e___] epsTensor[f___,x_,g___]]-> epsTensor[d,-1,e] epsTensor[f,-1,g],
sum[a_,b_,c_,fSU3[x_,d_,e_] fSU3[x_,f_,g_]]-> fSU3[-1,d,e] fSU3[-1,f,g],
 sum[a_,b_,c_,Lam[d___,x_,e___] Lam[f___,x_,g___]]-> Lam[d,-1,e] Lam[f,-1,g],
sum[a_,b_,c_,CG[c1___][d___,x_,e___] CG[c2__][f___,x_,g___]]-> CG[c1][d,-1,e] CG[c2][f,-1,g],
CG[SU[3],{{0,1},{2,0},{0,1}}][a_,b_,c_]->K6[b,a,c],
CG[SU[3],{{2,0},{0,1},{0,1}}][a_,b_,c_]->K6[a,b,c],
CG[SU[3],{{0,1},{0,1},{2,0}}][a_,b_,c_]->K6[c,a,b],

CG[SU[3],{{1,0},{0,2},{1,0}}][a_,b_,c_]->K6Bar[b,a,c],
CG[SU[3],{{0,2},{1,0},{1,0}}][a_,b_,c_]->K6Bar[a,b,c],
CG[SU[3],{{1,0},{1,0},{0,2}}][a_,b_,c_]->K6Bar[c,a,b],

(*
conj[CG[SU[3],{{1,0},{1,1},{0,1}}][a_,b_,c_]]\[Rule]2LamHlf[b,a,c],
conj[CG[SU[3],{{0,1},{1,1},{1,0}}][a_,b_,c_]]\[Rule]2LamHlf[b,c,a],
conj[CG[SU[3],{{1,1},{1,0},{0,1}}][a_,b_,c_]]\[Rule]2LamHlf[a,b,c],
conj[CG[SU[3],{{1,1},{0,1},{1,0}}][a_,b_,c_]]\[Rule]2LamHlf[a,c,b],
conj[CG[SU[3],{{1,0},{0,1},{1,1}}][a_,b_,c_]]\[Rule]2LamHlf[c,a,b],
conj[CG[SU[3],{{0,1},{1,0},{1,1}}][a_,b_,c_]]\[Rule]2LamHlf[c,b,a],
*)

conj[CG[SU[3],{{1,0},{1,1},{0,1}}][a_,b_,c_]]->2LamHlf[b,c,a],
conj[CG[SU[3],{{0,1},{1,1},{1,0}}][a_,b_,c_]]->2LamHlf[b,a,c],
conj[CG[SU[3],{{1,1},{1,0},{0,1}}][a_,b_,c_]]->2LamHlf[a,c,b],
conj[CG[SU[3],{{1,1},{0,1},{1,0}}][a_,b_,c_]]->2LamHlf[a,b,c],
conj[CG[SU[3],{{1,0},{0,1},{1,1}}][a_,b_,c_]]->2LamHlf[c,b,a],
conj[CG[SU[3],{{0,1},{1,0},{1,1}}][a_,b_,c_]]->2LamHlf[c,a,b],


CG[SU[3],{{1,0},{1,1},{0,1}}][a_,b_,c_]->2LamHlf[b,c,a],
CG[SU[3],{{0,1},{1,1},{1,0}}][a_,b_,c_]->2LamHlf[b,a,c],
CG[SU[3],{{1,1},{1,0},{0,1}}][a_,b_,c_]->2LamHlf[a,c,b],
CG[SU[3],{{1,1},{0,1},{1,0}}][a_,b_,c_]->2LamHlf[a,b,c],
CG[SU[3],{{1,0},{0,1},{1,1}}][a_,b_,c_]->2LamHlf[c,b,a],
CG[SU[3],{{0,1},{1,0},{1,1}}][a_,b_,c_]->2LamHlf[c,a,b],

Generator[SU[3],{2,0}][a_,b_,c_]->T6[a,c,b]

};

(*
subUfoLorentz = {
fSU3[a__]\[Rule]f[a],
fSU2[a__]\[Rule]Eps[a],
Mom[a_[{gt1,c___}],b_]\[Rule]P[b,1],
Mom[a_[{gt2,c___}],b_]\[Rule]P[b,2],
Mom[a_[{gt3,c___}],b_]\[Rule]P[b,3],
Mom[a_[{gt4,c___}],b_]\[Rule]P[b,4],

Mom[a_[{ct1,c___}],b_]\[Rule]P[b,1],
Mom[a_[{ct2,c___}],b_]\[Rule]P[b,2],
Mom[a_[{ct3,c___}],b_]\[Rule]P[b,3],
Mom[a_[{ct4,c___}],b_]\[Rule]P[b,4],

Mom[conj[a_[{gt1,c___}]],b_]\[Rule]P[b,1],
Mom[conj[a_[{gt2,c___}]],b_]\[Rule]P[b,2],
Mom[conj[a_[{gt3,c___}]],b_]\[Rule]P[b,3],
Mom[conj[a_[{gt4,c___}]],b_]\[Rule]P[b,4],

Mom[conj[a_[{ct1,c___}]],b_]\[Rule]P[b,1],
Mom[conj[a_[{ct2,c___}]],b_]\[Rule]P[b,2],
Mom[conj[a_[{ct3,c___}]],b_]\[Rule]P[b,3],
Mom[conj[a_[{ct4,c___}]],b_]\[Rule]P[b,4],

Mom[a_[{lt1,c___}],b_]\[Rule]P[b,1],
Mom[a_[{lt2,c___}],b_]\[Rule]P[b,2],
Mom[a_[{lt3,c___}],b_]\[Rule]P[b,3],
Mom[a_[{lt4,c___}],b_]\[Rule]P[b,4],

Mom[a_[{ct1,c___}],b_]\[Rule]P[b,1],
Mom[a_[{ct2,c___}],b_]\[Rule]P[b,2],
Mom[a_[{ct3,c___}],b_]\[Rule]P[b,3],
Mom[a_[{ct4,c___}],b_]\[Rule]P[b,4],

Mom[conj[a_[{lt1,c___}]],b_]\[Rule]P[b,1],
Mom[conj[a_[{lt2,c___}]],b_]\[Rule]P[b,2],
Mom[conj[a_[{lt3,c___}]],b_]\[Rule]P[b,3],
Mom[conj[a_[{lt4,c___}]],b_]\[Rule]P[b,4],

Mom[a_?AtomQ,b_]\[Rule]P[b,2],

ThetaStep[a__]\[Rule]1,

g[a__]\[Rule]Metric[a],
gamma[a_]\[Rule] Gamma[a,2,1],  
Lam[a_,b_,c_]\[Rule]2 T[a,c,b],

LorentzProduct[A_[b___,c_],B_[d_,e__]]\[Rule] A[b,-1] B[-1,e],
PR\[Rule]ProjP[2,1],
PL\[Rule]ProjM[2,1],   
lt1\[Rule]1, lt2\[Rule]2, lt3\[Rule]3, lt4\[Rule]4
};*)

subUfoLorentz = {
LorentzProduct[a__]->LorP[a],
fSU3[a__]->f[a],
fSU2[a__]->Eps[a],

Mom[a_Symbol,b_]->P[b,1],
Mom[conj[a_Symbol],b_]->P[b,2],

Mom[a_[{gt1,c___}],b_]->P[b,1],
Mom[a_[{gt2,c___}],b_]->P[b,2],
Mom[a_[{gt3,c___}],b_]->P[b,3],
Mom[a_[{gt4,c___}],b_]->P[b,4],

Mom[a_[{ct1,c___}],b_]->P[b,1],
Mom[a_[{ct2,c___}],b_]->P[b,2],
Mom[a_[{ct3,c___}],b_]->P[b,3],
Mom[a_[{ct4,c___}],b_]->P[b,4],

Mom[conj[a_[{gt1,c___}]],b_]->P[b,1],
Mom[conj[a_[{gt2,c___}]],b_]->P[b,2],
Mom[conj[a_[{gt3,c___}]],b_]->P[b,3],
Mom[conj[a_[{gt4,c___}]],b_]->P[b,4],

Mom[conj[a_[{ct1,c___}]],b_]->P[b,1],
Mom[conj[a_[{ct2,c___}]],b_]->P[b,2],
Mom[conj[a_[{ct3,c___}]],b_]->P[b,3],
Mom[conj[a_[{ct4,c___}]],b_]->P[b,4],

Mom[a_[{lt1,c___}],b_]->P[b,1],
Mom[a_[{lt2,c___}],b_]->P[b,2],
Mom[a_[{lt3,c___}],b_]->P[b,3],
Mom[a_[{lt4,c___}],b_]->P[b,4],

Mom[a_[{ct1,c___}],b_]->P[b,1],
Mom[a_[{ct2,c___}],b_]->P[b,2],
Mom[a_[{ct3,c___}],b_]->P[b,3],
Mom[a_[{ct4,c___}],b_]->P[b,4],

Mom[conj[a_[{lt1,c___}]],b_]->P[b,1],
Mom[conj[a_[{lt2,c___}]],b_]->P[b,2],
Mom[conj[a_[{lt3,c___}]],b_]->P[b,3],
Mom[conj[a_[{lt4,c___}]],b_]->P[b,4],

Mom[a_?AtomQ,b_]->P[b,2],

ThetaStep[a__]->1,
g[a__]->Metric[a],
gamma[a_]-> Gamma[a,2,1],  
Lam[a_,b_,c_]->2 T[a,c,b],
LorP[Gamma[a1_,a2_,a3_] ,Gamma[b1_,b2_,b3_],C___]:>If[a2<0,Gamma[a1,a2,a2-1] LorP[Gamma[b1,a2-1,b3],C],Gamma[a1,a2,-1] LorP[Gamma[b1,-1,b3],C]],
LorP[Gamma[a1_,a2_,a3_],B_[b1_,b2_]]:>If[a2<0,Gamma[a1,a2,a2-1] B[a2-1,b2],Gamma[a1,a2,-1] B[-1,b2]],
LorentzProduct[A_[b___,c_],B_[d_,e__]]-> A[b,-1] B[-1,e],
PR->ProjP[2,1],
PL->ProjM[2,1],   
lt1->1, lt2->2, lt3->3, lt4->4,
A_Symbol[a1___Integer,a2_Symbol,a3___Integer] B_Symbol[b1___Integer,a2_Symbol,b3___] C___:>C A[a1,Min[{a1,a3,b1,b3}]-1 /. z_Integer:>-1 /; z>=0  ,a3]B[b1,Min[{a1,a3,b1,b3}]-1/. z_Integer:>-1 /; z>=0,b3] /; FreeQ[FullForm[C],LorP] 
};


CreatePartListUfo:=Block[{i,j,k,temp,temp2,particle,charge},

Print["Creating particle List"];

particles=Flatten[{Transpose[PART[F]][[1]],Transpose[PART[S]][[1]],Transpose[PART[V]][[1]],Transpose[PART[G]][[1]]}];
DummyPDG=999900;
AutoFAnr = 1;
PartListFR={};
MassListFR={};
WidthListFR={};
subPartWO={};
AllParticlesWHO=particles;

For[i=1,i<=Length[particles],
temp2={};
If[NumericQ[getElectricCharge[particles[[i]]]],
charge=getElectricCharge[particles[[i]]];,
charge = Vertex[{AntiField[particles[[i]]],particles[[i]],VectorP},UseDependences->True][[2,1]] //. {Delta[a__]->1, Complex[0,b_]->Complex[b,0], e->-1};
If[getType[particles[[i]]]===S || getType[particles[[i]]]===V || getType[particles[[i]]]===G,charge=-charge;];
];
For[j=1,j<=getGen[particles[[i]]],
For[k=1,k<=getFla[particles[[i]]],
temp2=Join[temp2,{{
ToString[getOutputName[particles[[i]],j,k]],ToString[getOutputNameAnti[particles[[i]],j,k]],getType[particles[[i]]],
getPropagatorType[particles[[i]]],If[getType[particles[[i]]]===G,getMassW[getVectorBoson[particles[[i]]],j,k],getMassW[particles[[i]],j,k]],If[getType[particles[[i]]]===G,getWidthW[getVectorBoson[particles[[i]]],j,k],getWidthW[particles[[i]],j,k]],
getColorRep[particles[[i]]],getOutputName[particles[[i]],j,k],getPDG[particles[[i]],j,k] /. 0:>DummyPDG++,
getDescriptionField[particles[[i]],j,k],getLaTeXField[particles[[i]],j,k],getLaTeXField[AntiField[particles[[i]]],j,k],CheckGoldstone[particles[[i]],j,k],charge,
If[getGen[particles[[i]]]==1,particles[[i]],particles[[i]][j]]
}}];
MassListFR = Join[MassListFR,{{{Abs[getPDG[particles[[i]],j,k]]},getMassW[particles[[i]],j,k],getMassNumerical[particles[[i]],j,k]}}] ;
WidthListFR = Join[WidthListFR,{{{Abs[getPDG[particles[[i]],j,k]]},getWidthW[particles[[i]],j,k],getWidthNumerical[particles[[i]],j,k]}}];

If[getGen[particles[[i]]]>1,
If[getFla[particles[[i]]]>1,
subPartWO = Join[subPartWO,{AntiField[particles[[i]][{j,k,a___}]]->getOutputNameAnti[particles[[i]],j,k]}];
subPartWO = Join[subPartWO,{particles[[i]][{j,k,a___}]->getOutputName[particles[[i]],j,k]}];,
subPartWO = Join[subPartWO,{AntiField[particles[[i]][{j,a___}]]->getOutputNameAnti[particles[[i]],j,k]}];
subPartWO = Join[subPartWO,{particles[[i]][{j,a___}]->getOutputName[particles[[i]],j,k]}];
];,
If[Length[getIndizes[particles[[i]]]]>0,
subPartWO = Join[subPartWO,{AntiField[particles[[i]][{a___}]]->getOutputNameAnti[particles[[i]],j,k]}];
subPartWO = Join[subPartWO,{particles[[i]][{a___}]->getOutputName[particles[[i]],j,k]}];,
subPartWO = Join[subPartWO,{AntiField[particles[[i]]]->getOutputNameAnti[particles[[i]],j,k]}];
subPartWO = Join[subPartWO,{particles[[i]]->getOutputName[particles[[i]],j,k]}];
];
];
k++;];
j++;];
PartListFR=Join[PartListFR,{{{getType[particles[[i]]][FANumber[particles[[i]]]],getOutputName[particles[[i]],0]},temp2}}];
i++;];

PartListFR = PartListFR /. {Straight -> S,Sine -> W, ScalarDash->D, GhostDash->C} /. 0->ZERO;

MassListFR = Select[MassListFR,(FreeQ[#,0]==True)&] /. {LesHouches -> External, Mass ->External} /. External -> 100;
WidthListFR = Select[WidthListFR,(FreeQ[#,0]==True)&] /. {Width ->External} /. External ->1;

];


WriteUfoParameters[ES_,Exclude_,effHiggsV_]:=Block[{i,j,k,depmass,RXiList},

(* renaming Alpha_EW to fit MadGraph conventions *)
EParamList=EParamList/.aEWinv->aEWM1;
IParamList=IParamList/.aEWinv->aEWM1;

UfoP = OpenWrite[ToFileName[$sarahCurrentUfoDir,"parameters.py"]];



WriteString[UfoP,"# ----------------------------------------------------------------------  \n"];
WriteString[UfoP,"# This model file was automatically created by SARAH version"<>SA`Version<>" \n"];
WriteString[UfoP,"# SARAH References: arXiv:0806.0538, arXiv:0909.2863, arXiv:1002.0840    \n"];
WriteString[UfoP,"# (c) Florian Staub, 2011  \n"];
WriteString[UfoP,"# ----------------------------------------------------------------------  \n"];
WriteString[UfoP,"# File created at "<>ToString[Date[][[4]]]<>":"<>ToString[Date[][[5]]]<>" on "<>ToString[Date[][[3]]]<>"."<>ToString[Date[][[2]]]<>"."<>ToString[Date[][[1]]]<>"   \n"];
WriteString[UfoP,"# ----------------------------------------------------------------------  \n \n \n"];


WriteString[UfoP,"from object_library import all_parameters,Parameter \n \n"];
WriteString[UfoP,"from function_library import complexconjugate,re,im,csc,sec,acsc,asec \n \n"]; 


WriteString[UfoP,"ZERO=Parameter(name='ZERO', \n"];
WriteString[UfoP,"                      nature='internal', \n"];
WriteString[UfoP,"                      type='real', \n"];
WriteString[UfoP,"                      value='0.0', \n"];
WriteString[UfoP,"                      texname='0') \n \n"];


(* WriteString[UfoP,"from function_library import conj \n \n"]; *)
depmass=Table[subNumDependencesMasses[[i,1]],{i,1,Length[subNumDependencesMasses]}];
For[i=1,i<=Length[PartListFR],
For[j=1,j<=Length[PartListFR[[i,2]]],
entry =PartListFR[[i,2,j]]; 
If[entry[[5]]=!=ZERO && entry[[13]]===NoGS && entry[[3]] =!=G && FreeQ[depmass,Mass[entry[[15]]]],
WriteString[UfoP, UfoForm[entry[[5]]]<>" = \t Parameter(name = '"<>UfoForm[entry[[5]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = "<>ToString[NumericalValue[Mass[entry[[15]]]] /. NaN->100.]<>", \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>UfoForm[entry[[5]]]<>"}', \n"];
WriteString[UfoP,"\t lhablock = 'MASS', \n"];
WriteString[UfoP,"\t lhacode = ["<>ToString[Abs[entry[[9]]]]<>"]) \n \n"];
];

If[entry[[6]]=!=ZERO && entry[[13]]===NoGS && entry[[3]] =!=G,
WriteString[UfoP, UfoForm[entry[[6]]]<>" = \t Parameter(name = '"<>UfoForm[entry[[6]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = "<>ToString[NumericalValue[Width[entry[[15]]]] /. NaN->0.]<>", \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>UfoForm[entry[[6]]]<>"}', \n"];
WriteString[UfoP,"\t lhablock = 'DECAY', \n"];
WriteString[UfoP,"\t lhacode = ["<>ToString[Abs[entry[[9]]]]<>"]) \n \n"];
];

j++;];
i++;];


For[i=1,i<=Length[EParamList],
For[j=1,j<=Length[EParamList[[i,2]]],
If[EParamList[[i,2,j,2,3]]==False,
WriteString[UfoP, UfoForm[EParamList[[i,2,j,2,1]]]<>" = \t Parameter(name='"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = "<>UfoForm[EParamList[[i,2,j,2,2]]]<>", \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"}', \n"];
WriteString[UfoP,"\t lhablock = '"<>EParamList[[i,1]]<>"', \n"];
WriteString[UfoP,"\t lhacode = ["<>StringReplace[ToString[EParamList[[i,2,j,1]]],{"{"->"","}"->""}]<>"] ) \n \n"];,

WriteString[UfoP, "r"<>UfoForm[EParamList[[i,2,j,2,1]]]<>" = \t Parameter(name='r"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = "<>UfoForm[EParamList[[i,2,j,2,2]]]<>", \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"}', \n"];
WriteString[UfoP,"\t lhablock = '"<>EParamList[[i,1]]<>"', \n"];
WriteString[UfoP,"\t lhacode = ["<>StringReplace[ToString[EParamList[[i,2,j,1]]],{"{"->"","}"->""}]<>"] ) \n \n"];

WriteString[UfoP, "i"<>UfoForm[EParamList[[i,2,j,2,1]]]<>" = \t Parameter(name='i"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = "<>UfoForm[EParamList[[i,2,j,2,2]] /. 1.->0.]<>", \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"}', \n"];
WriteString[UfoP,"\t lhablock = 'IM"<>EParamList[[i,1]]<>"', \n"];
WriteString[UfoP,"\t lhacode = ["<>StringReplace[ToString[EParamList[[i,2,j,1]]],{"{"->"","}"->""}]<>"] ) \n \n"];
];
j++;];
i++;];

For[i=1,i<=Length[EParamList],
For[j=1,j<=Length[EParamList[[i,2]]],
If[FreeQ[EParamList[[i,2]],sum]==True,
If[EParamList[[i,2,j,2,3]]==True,
WriteString[UfoP, UfoForm[EParamList[[i,2,j,2,1]]]<>" = \t Parameter(name='"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'internal', \n"];
WriteString[UfoP,"\t type = 'complex', \n"];
WriteString[UfoP,"\t value = 'r"<> UfoForm[EParamList[[i,2,j,2,1]]]<>" + complex(0,1)*i"<> UfoForm[EParamList[[i,2,j,2,1]]]<>"', \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>UfoForm[EParamList[[i,2,j,2,1]]]<>"}' ) \n \n"];
];
];
j++;];
i++;];

For[i=1,i<=Length[IParamList],
If[FreeQ[IParamList[[i,2]],sum]==True,
WriteString[UfoP, UfoForm[IParamList[[i,1]]]<>" = \t Parameter(name='"<>UfoForm[IParamList[[i,1]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'internal', \n"];
If[IParamList[[i,3]]==False,
WriteString[UfoP,"\t type = 'real', \n"];,
WriteString[UfoP,"\t type = 'complex', \n"];
];
If[NumericQ[IParamList[[i,2]]],
WriteString[UfoP,"\t value = '1.*("<>UfoForm[IParamList[[i,2]]]<>")', \n"];,
WriteString[UfoP,"\t value = '"<>UfoForm[IParamList[[i,2]]]<>"', \n"];
];
WriteString[UfoP,"\t texname = '"<>UfoForm[IParamList[[i,1]]]<>"') \n \n"];
];
i++;];

RXiList=Intersection[Cases[SA`VertexList[GGS],x_RXi,99]];


For[i=1,i<=Length[RXiList],
WriteString[UfoP, UfoForm[RXiList[[i]]]<>" = \t Parameter(name='"<>UfoForm[RXiList[[i]]]<>"', \n"];
WriteString[UfoP,"\t nature = 'internal', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = '1.', \n"];
WriteString[UfoP,"\t texname = '"<>UfoForm[RXiList[[i]]]<>"') \n \n"];
i++;];

If[effHiggsV,
If[getGen[HiggsBoson]<99,
For[j=1,j<=getGen[HiggsBoson],
WriteString[UfoP,"HPP"<>ToString[j] <>" = \t Parameter(name='"<>"HPP"<>ToString[j]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = 0., \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>"HPP"<>ToString[j] <>"}', \n"];
WriteString[UfoP,"\t lhablock = 'EFFHIGGSCOUPLINGS', \n"];
WriteString[UfoP,"\t lhacode = ["<>ToString[getPDG[HiggsBoson,j]]<>","<>ToString[getPDG[VectorP,1]]<>","<>ToString[getPDG[VectorP,1]]<>"] ) \n \n"];

WriteString[UfoP,"HGG"<>ToString[j] <>" = \t Parameter(name='"<>"HGG"<>ToString[j]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = 0., \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>"HGG"<>ToString[j] <>"}', \n"];
WriteString[UfoP,"\t lhablock = 'EFFHIGGSCOUPLINGS', \n"];
WriteString[UfoP,"\t lhacode = ["<>ToString[getPDG[HiggsBoson,j]]<>","<>ToString[getPDG[VectorG,1]]<>","<>ToString[getPDG[VectorG,1]]<>"] ) \n \n"];
j++;];
];

If[getGen[PseudoScalar]<99,
For[j=getGenSPhenoStart[PseudoScalar],j<=getGen[PseudoScalar],
WriteString[UfoP,"APP"<>ToString[j] <>" = \t Parameter(name='"<>"APP"<>ToString[j]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = 0., \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>"APP"<>ToString[j] <>"}', \n"];
WriteString[UfoP,"\t lhablock = 'EFFHIGGSCOUPLINGS', \n"];
WriteString[UfoP,"\t lhacode = ["<>ToString[getPDG[PseudoScalar,j]]<>","<>ToString[getPDG[VectorP,1]]<>","<>ToString[getPDG[VectorP,1]]<>"] ) \n \n"];

WriteString[UfoP,"AGG"<>ToString[j] <>" = \t Parameter(name='"<>"AGG"<>ToString[j]<>"', \n"];
WriteString[UfoP,"\t nature = 'external', \n"];
WriteString[UfoP,"\t type = 'real', \n"];
WriteString[UfoP,"\t value = 0., \n"];
WriteString[UfoP,"\t texname = '\\\\text{"<>"AGG"<>ToString[j] <>"}', \n"];
WriteString[UfoP,"\t lhablock = 'EFFHIGGSCOUPLINGS', \n"];
WriteString[UfoP,"\t lhacode = ["<>ToString[getPDG[PseudoScalar,j]]<>","<>ToString[getPDG[VectorG,1]]<>","<>ToString[getPDG[VectorG,1]]<>"] ) \n \n"];
j++;];
];
];

Close[UfoP];
];


AddStandardFiles :=Block[{},
file = OpenWrite[ToFileName[$sarahCurrentUfoDir,"function_library.py"]];
AppendSourceCode["function_library.py",file];
Close[file];

file = OpenWrite[ToFileName[$sarahCurrentUfoDir,"__init__.py"]];
AppendSourceCode["__init__.py",file];
Close[file];

file = OpenWrite[ToFileName[$sarahCurrentUfoDir,"object_library.py"]];
AppendSourceCode["object_library.py",file];
Close[file];

file = OpenWrite[ToFileName[$sarahCurrentUfoDir,"write_param_card.py"]];
AppendSourceCode["write_param_card.py",file];
Close[file];

file = OpenWrite[ToFileName[$sarahCurrentUfoDir,"coupling_orders.py"]];
AppendSourceCode["coupling_orders.py",file];
Close[file];

];

K6[a_,ct3,ct1]:=K6[a,ct1,ct3];
K6[a_,ct3,ct2]:=K6[a,ct2,ct3];
K6[a_,ct2,ct1]:=K6[a,ct1,ct2];
K6Bar[a_,ct3,ct1]:=K6Bar[a,ct1,ct3];
K6Bar[a_,ct3,ct2]:=K6Bar[a,ct2,ct3];
K6Bar[a_,ct2,ct1]:=K6Bar[a,ct1,ct2];
conj[K6[a__]]=K6[a];
conj[K6Bar[a__]]=K6Bar[a];
