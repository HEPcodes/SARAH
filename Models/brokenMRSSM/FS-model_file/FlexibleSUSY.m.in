FSModelName = "@CLASSNAME@";
FSDefaultSARAHModel = brokenMRSSM;

MINPAR = {
    {1, mSUSY},
    {5, Azero},
    {6, Bzero},
    {3, TanBeta}
};

EXTPAR = {
    {1, M1input},
    {2, M2input},
    {3, M3input},
    {4, MDBinput},
    {5, MDWinput},
    {6, MDOinput},
    {40, MuDinput},
    {41, MuUinput},
    {45, BmuInput},
    {80, LSDinput},
    {81, LSUinput},
    {82, LTDinput},
    {83, LTUinput},
    {91, vSinput},
    {92, vTinput},
    {93, vRdInput},
    {94, vRuInput}
};

FSExtraInputParameters = {};

EWSBOutputParameters = {mHd2, mHu2, mS2, mT2, mRd2, mRu2};

HighScale = Null;

HighScaleFirstGuess =. ; (* please set to a reasonable value! *) 

HighScaleInput = {
    {LamSD, LSDinput},
    {LamSU, LSUinput},
    {LamTD, LTDinput},
    {LamTU, LTUinput},
    {T[LamSD], Azero*LamSD},
    {T[LamSU], Azero*LamSU},
    {T[LamTD], Azero*LamTD},
    {T[LamTU], Azero*LamTU},
    {T[Yu], Azero*Yu},
    {T[Yd], Azero*Yd},
    {T[Ye], Azero*Ye},
    {MuD, MuDinput},
    {MuU, MuUinput},
    {B[MuD], Bzero*MuD},
    {B[MuU], Bzero*MuU},
    {B[μ], BmuInput},
    {μ, 0},
    {mq2, mSUSY^2*UNITMATRIX[3]},
    {ml2, mSUSY^2*UNITMATRIX[3]},
    {md2, mSUSY^2*UNITMATRIX[3]},
    {mu2, mSUSY^2*UNITMATRIX[3]},
    {me2, mSUSY^2*UNITMATRIX[3]},
    {moc2, mSUSY^2},
    {MDBS, MDBinput},
    {MDWBT, MDWinput},
    {MDGoc, MDOinput},
    {MassB, M1input},
    {MassWB, M2input},
    {MassG, M3input}
};

SUSYScale = mSUSY;

SUSYScaleFirstGuess = mSUSY;

SUSYScaleInput = {
    {vT, vTinput},
    {vS, vSinput},
    {vRd, vRdInput},
    {vRu, vRuInput}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowScale;

LowScaleInput = {
    {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
    {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]},
    {SARAH`UpYukawa, Automatic},
    {SARAH`DownYukawa, Automatic},
    {SARAH`ElectronYukawa, Automatic}
};

InitialGuessAtHighScale = {};

InitialGuessAtLowScale = {
   {SARAH`VEVSM1, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {SARAH`VEVSM2, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {SARAH`UpYukawa, Automatic},
   {SARAH`DownYukawa, Automatic},
   {SARAH`ElectronYukawa, Automatic}
};

PotentialLSPParticles = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput,
           {{1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } }
};

(* Workaround:  SARAH 4.2.2 defines Weinberg angle as

     {ThetaW, { Description -> "Weinberg-Angle",
                DependenceNum -> None,
                Value -> 0.511621}},

   However, we currently need its analytic expression in terms
   of MW and MZ.
 *)
SARAH`ParameterDefinitions = Append[
    Cases[SARAH`ParameterDefinitions, {p_ /; p =!= SARAH`ThetaW, ___}],
    {SARAH`ThetaW,
     { Description -> "Weinberg-Angle",
       DependenceNum -> ArcSin[Sqrt[1 - (Mass[VWm]^2 - g2^2*vT^2)/Mass[VZ]^2]]}}
];
