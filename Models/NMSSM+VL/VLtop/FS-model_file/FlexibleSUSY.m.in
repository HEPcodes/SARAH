FSModelName = "@CLASSNAME@";
FSDefaultSARAHModel = NMSSM+VL/VLtop;
FSRGELoopOrder = 2;

MINPAR = {{1, m0},
       	  {2, m12},
	  {3, TanBeta},
	  {5, Azero}
};

EXTPAR = {{61, LambdaInput},
          {62, KappaInput},
	  {63, ALambdaInput},
	  {64, AKappaInput},
	  {65, MuEffinput},
	  {66, YTInput},
	  {67, LRInput},
	  {68, LVInput},
	  {69, AYTInput},
	  {70, ALRInput},
	  {71, ALVInput}
};

FSExtraInputParameters = {};

EWSBOutputParameters = {mHd2, mHu2, ms2};

HighScale = g1 == g2;

HighScaleFirstGuess = 2.0 10^16 ; (* please set to a reasonable value! *) 

HighScaleInput = {{T[Ye], Azero*Ye},
	       	 {T[Yd], Azero*Yd},
		 {T[Yu], Azero*Yu},
		 {T[Yt], AYTInput*Yt},
		 {LR, LRInput},
		 {LV[1], 0.0},
		 {LV[2], 0.0},
		 {LV[3], LVInput},
		 {T[LR], ALRInput*LR},
		 {T[LV], ALVInput*LV},
		 {mt12, m0^2},
		 {mt22, m0^2},
		 {mut12[1], 0.0},
		 {mut12[2], 0.0},
		 {mut12[3], 0.0},
		 {mq2, m0^2*UNITMATRIX[3]},
		 {ml2, m0^2*UNITMATRIX[3]},
		 {md2, m0^2*UNITMATRIX[3]},
		 {mu2, m0^2*UNITMATRIX[3]},
		 {me2, m0^2*UNITMATRIX[3]},
		 {\[Kappa], KappaInput},
		 {\[Lambda], LambdaInput},
		 {T[κ], AKappaInput*κ},
		 {T[λ], ALambdaInput*λ},
		 {MassB, m12},
		 {MassWB, m12},
		 {MassG, m12}
};

(* SUSYScale is the EWSB scale by default *)
SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[m0^2 + 4*m12^2];

SUSYScaleInput = {
		   {Yt[1], 0.0},
		   {Yt[2], 0.0},
	           {Yt[3], YTInput},
		   {vS, (Sqrt[2]*MuEffinput)/LambdaInput}
};

LowScale = LowEnergyConstant[MZ]; (* or LowEnergyConstant[MT] *)

LowScaleFirstGuess = LowScale;


LowScaleInput = {
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]},
   {Yd, Automatic},
   {Ye, Automatic},
   {Yu[1,1], Sqrt[2] topDRbar[1,1] / vu},
   {Yu[2,2], Sqrt[2] topDRbar[2,2] / vu},
   {Yu[3,3], Sqrt[2] topDRbar[3,3] / vu} 
};

InitialGuessAtHighScale = {};

InitialGuessAtLowScale = {
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {\[Lambda], LambdaInput},
   {\[Kappa], KappaInput},
   {vS,(Sqrt[2]*MuEffinput)/LambdaInput },
   {ms2, LowEnergyConstant[MZ]^2},
   {Yu[1,1], Sqrt[2] topDRbar[1,1] / vu},
   {Yu[2,2], Sqrt[2] topDRbar[2,2] / vu},
   {Yu[3,3], Sqrt[2] topDRbar[3,3] / vu},
   {Yd, Automatic},
   {Ye, Automatic}
};


(* set to True to enable Pietro's 2L Higgs mass corrections
   in NMSSM-like models (3 CP-even Higges, 1 or 2 CP-odd Higgess) *)
UseHiggs2LoopNMSSM = True;
EffectiveMu = \[Lambda] vS / Sqrt[2];
EffectiveMASqr = (T[\[Lambda]] vS / Sqrt[2] + 0.5 \[Lambda] \[Kappa] vS^2) (vu^2 + vd^2) / (vu vd);

PotentialLSPParticles = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput,
           {{0, Hold[HighScale]}, 
	    {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } }
};
