FSModelName = "@CLASSNAME@";
FSDefaultSARAHModel = THDM-ScalarSeptuplet;
FSRGELoopOrder = 0;

OnlyLowEnergyFlexibleSUSY = True;

MINPAR = {
    {1, Lambda1Input},
    {2, Lambda2Input},
    {3, Lambda3Input},
    {4, Lambda4Input},
    {5, Lambda5Input},
    {9, M122input},
    {10, TanBeta},
    {11, LambdaT1Input},
    {12, LambdaT2Input},
    {13, LambdaT3Input},
    {14, LambdaT4Input},
    {15, MTInput}
};

EXTPAR = {};

FSExtraInputParameters = {};

EWSBOutputParameters = {M112, M222};

SUSYScale = LowScale;

SUSYScaleFirstGuess = LowScaleFirstGuess;

SUSYScaleInput = {};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowScale;

LowScaleInput = {
    {Lambda1, Lambda1Input},
    {Lambda2, Lambda2Input},
    {Lambda3, Lambda3Input},
    {Lambda4, Lambda4Input},
    {Lambda5, Lambda5Input},
    {LambdaT1, LambdaT1Input},
    {LambdaT2, LambdaT2Input},
    {LambdaT3, LambdaT3Input},
    {LambdaT4, LambdaT4Input},
    {M122, M122input},
    {v1, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
    {v2, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]},
    {MT2, MTInput^2},
    {Ye[1,1], -((epsE[1,1]*v2)/v1) + (LowEnergyConstant[vSM]*LowEnergyConstant[yeSM])/v1},
    {Ye[2,2], -((epsE[2,2]*v2)/v1) + (LowEnergyConstant[vSM]*LowEnergyConstant[ymSM])/v1},
    {Ye[3,3], -((epsE[3,3]*v2)/v1) + (LowEnergyConstant[vSM]*LowEnergyConstant[ylSM])/v1},
    {Yd[1,1], -((epsD[1,1]*v2)/v1) + (LowEnergyConstant[vSM]*LowEnergyConstant[ydSM])/v1},
    {Yd[2,2], -((epsD[2,2]*v2)/v1) + (LowEnergyConstant[vSM]*LowEnergyConstant[ysSM])/v1},
    {Yd[3,3], -((epsD[3,3]*v2)/v1) + (LowEnergyConstant[vSM]*LowEnergyConstant[ybSM])/v1},
    {Yu[1,1], -((epsU[1,1]*v1)/v2) + (LowEnergyConstant[vSM]*LowEnergyConstant[yuSM])/v2},
    {Yu[2,2], -((epsU[2,2]*v1)/v2) + (LowEnergyConstant[vSM]*LowEnergyConstant[ycSM])/v2},
    {Yu[3,3], -((epsU[3,3]*v1)/v2) + (LowEnergyConstant[vSM]*LowEnergyConstant[ytSM])/v2}
};

InitialGuessAtLowScale = {
    {Lambda1, Lambda1Input},
    {Lambda2, Lambda2Input},
    {Lambda3, Lambda3Input},
    {Lambda4, Lambda4Input},
    {Lambda5, Lambda5Input},
    {LambdaT1, LambdaT1Input},
    {LambdaT2, LambdaT2Input},
    {LambdaT3, LambdaT3Input},
    {LambdaT4, LambdaT4Input},
    {M122, M122input},
    {v1, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
    {v2, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
    {MT2, MTInput^2},
    {Ye[1,1], -LowEnergyConstant[yeSM] / Cos[ArcTan[TanBeta]]},
    {Ye[2,2], -LowEnergyConstant[ymSM] / Cos[ArcTan[TanBeta]]},
    {Ye[3,3], -LowEnergyConstant[ylSM] / Cos[ArcTan[TanBeta]]},
    {Yd[1,1], -LowEnergyConstant[ydSM] / Cos[ArcTan[TanBeta]]},
    {Yd[2,2], -LowEnergyConstant[ysSM] / Cos[ArcTan[TanBeta]]},
    {Yd[3,3], -LowEnergyConstant[ybSM] / Cos[ArcTan[TanBeta]]},
    {Yu[1,1], -LowEnergyConstant[yuSM] / Sin[ArcTan[TanBeta]]},
    {Yu[2,2], -LowEnergyConstant[ycSM] / Sin[ArcTan[TanBeta]]},
    {Yu[3,3], -LowEnergyConstant[ytSM] / Sin[ArcTan[TanBeta]]}
};

PotentialLSPParticles = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput,
           {{1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } }
};

(* Fix from Kilian Nickel to make SARAH calculate the self-energy of T0 *)
conj[T0]=T0;
