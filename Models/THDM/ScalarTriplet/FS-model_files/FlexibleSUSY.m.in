FSModelName = "@CLASSNAME@";
FSDefaultSARAHModel = THDM-ScalarTriplet;
FSRGELoopOrder = 0;

OnlyLowEnergyFlexibleSUSY = True;

MINPAR = {
    {1, Lambda1Input},
    {2, Lambda2Input},
    {3, Lambda3Input},
    {4, Lambda4Input},
    {5, Lambda5Input},
    {9, M122input},
    {10, TanBeta},
    {11, K1input},
    {12, K2input},
    {13, K3input},
    {14, K4input},
    {15, K3pinput},
    {16, K4pinput},
    {17, MTinput}
};

EXTPAR = {};

FSExtraInputParameters = {};

EWSBOutputParameters = {M112, M222, vT};

SUSYScale = LowScale;

SUSYScaleFirstGuess = LowScaleFirstGuess;

SUSYScaleInput = {};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowScale;

LowScaleInput = {
    {Lambda1, Lambda1Input},
    {Lambda2, Lambda2Input},
    {Lambda3, Lambda3Input},
    {Lambda4, Lambda4Input},
    {Lambda5, Lambda5Input},
    {K1, K1input},
    {K2, K2input},
    {K3, K3input},
    {K4, K4input},
    {K3p, K3pinput},
    {K4p, K4pinput},
    {M122, M122input},
    {MT2, MTinput^2},
    {v1, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
    {v2, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]},
    {Yu, Automatic},
    {Yd, Automatic},
    {Ye, Automatic}
};

InitialGuessAtLowScale = {
    {Lambda1, Lambda1Input},
    {Lambda2, Lambda2Input},
    {Lambda3, Lambda3Input},
    {Lambda4, Lambda4Input},
    {Lambda5, Lambda5Input},
    {K1, K1input},
    {K2, K2input},
    {K3, K3input},
    {K4, K4input},
    {K3p, K3pinput},
    {K4p, K4pinput},
    {M122, M122input},
    {MT2, MTinput^2},
    {v1, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
    {v2, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
    {Yu, Automatic},
    {Yd, Automatic},
    {Ye, Automatic}
};

PotentialLSPParticles = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput,
           {{1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } }
};

TreeLevelEWSBSolution = {
    { M112, (-(Lambda1*v1^3) + 2*M122*v2 - Lambda3*v1*v2^2 - Lambda4*v1*v2^2 - 
             Lambda5*v1*v2^2 - K3*v1*vT^2 - K4*v1*vT^2 + 2*tadpole[1])/(2*v1) },
    { M222, (2*M122*v1 - Lambda3*v1^2*v2 - Lambda4*v1^2*v2 - Lambda5*v1^2*v2 - 
             Lambda2*v2^3 - K3p*v2*vT^2 - K4p*v2*vT^2 + 2*tadpole[2])/(2*v2) },
    { vT, -((2^(1/3)*(-2*MT2 - K3*v1^2 - K4*v1^2 - K3p*v2^2 - K4p*v2^2))/
      (-216*K1^2*tadpole[3] - 432*K1*K2*tadpole[3] - 216*K2^2*tadpole[3] + 
        Sqrt[-864*(K1 + K2)^3*(-2*MT2 - K3*v1^2 - K4*v1^2 - K3p*v2^2 - 
             K4p*v2^2)^3 + (-216*K1^2*tadpole[3] - 432*K1*K2*tadpole[3] - 
            216*K2^2*tadpole[3])^2])^(1/3)) - 
    (-216*K1^2*tadpole[3] - 432*K1*K2*tadpole[3] - 216*K2^2*tadpole[3] + 
       Sqrt[-864*(K1 + K2)^3*(-2*MT2 - K3*v1^2 - K4*v1^2 - K3p*v2^2 - 
            K4p*v2^2)^3 + (-216*K1^2*tadpole[3] - 432*K1*K2*tadpole[3] - 
           216*K2^2*tadpole[3])^2])^(1/3)/(6*2^(1/3)*(K1 + K2)) }
};
